{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6","program":"/Users/hanwang/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","tree_sitter","--edition=2018","/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=57d094e6534d5279","-C","extra-filename=-57d094e6534d5279","--out-dir","/Users/hanwang/Desktop/mintlify/grove/package/parser/target/rls/debug/deps","-L","dependency=/Users/hanwang/Desktop/mintlify/grove/package/parser/target/rls/debug/deps","--extern","regex=/Users/hanwang/Desktop/mintlify/grove/package/parser/target/rls/debug/deps/libregex-f58c496f97107460.rmeta","--cap-lints","allow","-L","native=/Users/hanwang/Desktop/mintlify/grove/package/parser/target/rls/debug/build/tree-sitter-a4fbeb8c75cde53b/out","-l","static=tree-sitter","--error-format=json","--sysroot","/Users/hanwang/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/hanwang/Desktop/mintlify/grove/package/parser/target/rls/debug/deps/libtree_sitter-57d094e6534d5279.rmeta"},"prelude":{"crate_id":{"name":"tree_sitter","disambiguator":[18446734369544795627,0]},"crate_root":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust","external_crates":[{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":1,"id":{"name":"std","disambiguator":[5327680806253035642,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":2,"id":{"name":"core","disambiguator":[3474867148648759986,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5062925168166713036,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2981460363035574205,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17736094580601255721,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10052842426541007562,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9489815130599098901,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3346726902215706372,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3873550637736747779,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4549466995013025454,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5157751798851432137,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17289477099079096810,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[9019874491848494796,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5361552711123437457,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":15,"id":{"name":"object","disambiguator":[1973549709176203698,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16289716248128265453,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1392457260957006495,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":18,"id":{"name":"regex","disambiguator":[3415462757173402864,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":19,"id":{"name":"regex_syntax","disambiguator":[3874507028601957489,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":20,"id":{"name":"aho_corasick","disambiguator":[7290012078854163502,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","num":21,"id":{"name":"memchr","disambiguator":[14182381211266571593,0]}}],"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":0,"byte_end":78967,"line_start":1,"line_end":2235,"column_start":1,"column_end":29}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":0,"byte_end":78967,"line_start":1,"line_end":2235,"column_start":1,"column_end":29},"name":"","qualname":"::","value":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":91},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":865},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":94},{"krate":0,"index":913},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":926},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":957},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":958},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":108},{"krate":0,"index":115},{"krate":0,"index":125},{"krate":0,"index":135},{"krate":0,"index":999},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1088},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":154},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":323},{"krate":0,"index":338},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":363},{"krate":0,"index":369},{"krate":0,"index":375},{"krate":0,"index":381},{"krate":0,"index":385},{"krate":0,"index":391},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":726},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9741151,"byte_end":9741158,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"TSPoint","qualname":"::ffi::TSPoint","value":"TSPoint { row, column }","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9741099,"byte_end":9741109,"line_start":37,"line_end":37,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":727},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9741169,"byte_end":9741172,"line_start":40,"line_end":40,"column_start":9,"column_end":12},"name":"row","qualname":"::ffi::TSPoint::row","value":"u32","parent":{"krate":0,"index":726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":728},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9741187,"byte_end":9741193,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"name":"column","qualname":"::ffi::TSPoint::column","value":"u32","parent":{"krate":0,"index":726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":734},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9741254,"byte_end":9741261,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"TSRange","qualname":"::ffi::TSRange","value":"TSRange { start_point, end_point, start_byte, end_byte }","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9741202,"byte_end":9741212,"line_start":43,"line_end":43,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":735},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9741272,"byte_end":9741283,"line_start":46,"line_end":46,"column_start":9,"column_end":20},"name":"start_point","qualname":"::ffi::TSRange::start_point","value":"ffi::TSPoint","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":736},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9741302,"byte_end":9741311,"line_start":47,"line_end":47,"column_start":9,"column_end":18},"name":"end_point","qualname":"::ffi::TSRange::end_point","value":"ffi::TSPoint","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":737},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9741330,"byte_end":9741340,"line_start":48,"line_end":48,"column_start":9,"column_end":19},"name":"start_byte","qualname":"::ffi::TSRange::start_byte","value":"u32","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":738},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9741355,"byte_end":9741363,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"name":"end_byte","qualname":"::ffi::TSRange::end_byte","value":"u32","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":761},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9742299,"byte_end":9742310,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"TSInputEdit","qualname":"::ffi::TSInputEdit","value":"TSInputEdit { start_byte, old_end_byte, new_end_byte, start_point, old_end_point, new_end_point }","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9742247,"byte_end":9742257,"line_start":80,"line_end":80,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":762},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9742321,"byte_end":9742331,"line_start":83,"line_end":83,"column_start":9,"column_end":19},"name":"start_byte","qualname":"::ffi::TSInputEdit::start_byte","value":"u32","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":763},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9742346,"byte_end":9742358,"line_start":84,"line_end":84,"column_start":9,"column_end":21},"name":"old_end_byte","qualname":"::ffi::TSInputEdit::old_end_byte","value":"u32","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":764},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9742373,"byte_end":9742385,"line_start":85,"line_end":85,"column_start":9,"column_end":21},"name":"new_end_byte","qualname":"::ffi::TSInputEdit::new_end_byte","value":"u32","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":765},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9742400,"byte_end":9742411,"line_start":86,"line_end":86,"column_start":9,"column_end":20},"name":"start_point","qualname":"::ffi::TSInputEdit::start_point","value":"ffi::TSPoint","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":766},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9742430,"byte_end":9742443,"line_start":87,"line_end":87,"column_start":9,"column_end":22},"name":"old_end_point","qualname":"::ffi::TSInputEdit::old_end_point","value":"ffi::TSPoint","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":767},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/./bindings.rs","byte_start":9742462,"byte_end":9742475,"line_start":88,"line_end":88,"column_start":9,"column_end":22},"name":"new_end_point","qualname":"::ffi::TSInputEdit::new_end_point","value":"ffi::TSPoint","parent":{"krate":0,"index":761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":88},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":700,"byte_end":716,"line_start":28,"line_end":28,"column_start":11,"column_end":27},"name":"LANGUAGE_VERSION","qualname":"::LANGUAGE_VERSION","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The latest ABI version that is supported by the current version of the\n library.","sig":null,"attributes":[{"value":"/ The latest ABI version that is supported by the current version of the","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":303,"byte_end":377,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ library.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":378,"byte_end":390,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":391,"byte_end":394,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ When Languages are generated by the Tree-sitter CLI, they are","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":395,"byte_end":460,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/ assigned an ABI version number that corresponds to the current CLI version.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":461,"byte_end":540,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ The Tree-sitter library is generally backwards-compatible with languages","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":541,"byte_end":617,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ generated using older CLI versions, but is not forwards-compatible.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":618,"byte_end":689,"line_start":27,"line_end":27,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":89},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":862,"byte_end":893,"line_start":32,"line_end":32,"column_start":11,"column_end":42},"name":"MIN_COMPATIBLE_LANGUAGE_VERSION","qualname":"::MIN_COMPATIBLE_LANGUAGE_VERSION","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The earliest ABI version that is supported by the current version of the\n library.\n","sig":null,"attributes":[{"value":"/ The earliest ABI version that is supported by the current version of the","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":762,"byte_end":838,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ library.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":839,"byte_end":851,"line_start":31,"line_end":31,"column_start":1,"column_end":13}}]},{"kind":"Const","id":{"krate":0,"index":90},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":964,"byte_end":977,"line_start":34,"line_end":34,"column_start":11,"column_end":24},"name":"PARSER_HEADER","qualname":"::PARSER_HEADER","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":821},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1261,"byte_end":1269,"line_start":40,"line_end":40,"column_start":12,"column_end":20},"name":"Language","qualname":"::Language","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque object that defines how to parse a particular language. The code for each\n `Language` is generated by the Tree-sitter CLI.\n","sig":null,"attributes":[{"value":"/ An opaque object that defines how to parse a particular language. The code for each","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1044,"byte_end":1131,"line_start":36,"line_end":36,"column_start":1,"column_end":88}},{"value":"/ `Language` is generated by the Tree-sitter CLI.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1132,"byte_end":1183,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"repr(transparent)","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1229,"byte_end":1249,"line_start":39,"line_end":39,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":91},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1381,"byte_end":1385,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"Tree","qualname":"::Tree","value":"","parent":null,"children":[],"decl_id":null,"docs":" A tree that represents the syntactic structure of a source code file.\n","sig":null,"attributes":[{"value":"/ A tree that represents the syntactic structure of a source code file.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1296,"byte_end":1369,"line_start":42,"line_end":42,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":836},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1615,"byte_end":1620,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"Point","qualname":"::Point","value":"Point { row, column }","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838}],"decl_id":null,"docs":" A position in a multi-line text document, in terms of rows and columns.","sig":null,"attributes":[{"value":"/ A position in a multi-line text document, in terms of rows and columns.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1410,"byte_end":1485,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1486,"byte_end":1489,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Rows and columns are zero-based.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1490,"byte_end":1526,"line_start":47,"line_end":47,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":837},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1631,"byte_end":1634,"line_start":50,"line_end":50,"column_start":9,"column_end":12},"name":"row","qualname":"::Point::row","value":"usize","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":838},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1651,"byte_end":1657,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"name":"column","qualname":"::Point::column","value":"usize","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":860},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1856,"byte_end":1861,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"Range","qualname":"::Range","value":"Range { start_byte, end_byte, start_point, end_point }","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864}],"decl_id":null,"docs":" A range of positions in a multi-line text document, both in terms of bytes and of\n rows and columns.\n","sig":null,"attributes":[{"value":"/ A range of positions in a multi-line text document, both in terms of bytes and of","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1669,"byte_end":1754,"line_start":54,"line_end":54,"column_start":1,"column_end":86}},{"value":"/ rows and columns.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1755,"byte_end":1776,"line_start":55,"line_end":55,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":861},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1872,"byte_end":1882,"line_start":58,"line_end":58,"column_start":9,"column_end":19},"name":"start_byte","qualname":"::Range::start_byte","value":"usize","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":862},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1899,"byte_end":1907,"line_start":59,"line_end":59,"column_start":9,"column_end":17},"name":"end_byte","qualname":"::Range::end_byte","value":"usize","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":863},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1924,"byte_end":1935,"line_start":60,"line_end":60,"column_start":9,"column_end":20},"name":"start_point","qualname":"::Range::start_point","value":"Point","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":864},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1952,"byte_end":1961,"line_start":61,"line_end":61,"column_start":9,"column_end":18},"name":"end_point","qualname":"::Range::end_point","value":"Point","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":884},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2075,"byte_end":2084,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"InputEdit","qualname":"::InputEdit","value":"InputEdit { start_byte, old_end_byte, new_end_byte, start_position, old_end_position, new_end_position }","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890}],"decl_id":null,"docs":" A summary of a change to a text document.\n","sig":null,"attributes":[{"value":"/ A summary of a change to a text document.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":1973,"byte_end":2018,"line_start":64,"line_end":64,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":885},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2095,"byte_end":2105,"line_start":67,"line_end":67,"column_start":9,"column_end":19},"name":"start_byte","qualname":"::InputEdit::start_byte","value":"usize","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":886},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2122,"byte_end":2134,"line_start":68,"line_end":68,"column_start":9,"column_end":21},"name":"old_end_byte","qualname":"::InputEdit::old_end_byte","value":"usize","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":887},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2151,"byte_end":2163,"line_start":69,"line_end":69,"column_start":9,"column_end":21},"name":"new_end_byte","qualname":"::InputEdit::new_end_byte","value":"usize","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":888},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2180,"byte_end":2194,"line_start":70,"line_end":70,"column_start":9,"column_end":23},"name":"start_position","qualname":"::InputEdit::start_position","value":"Point","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":889},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2211,"byte_end":2227,"line_start":71,"line_end":71,"column_start":9,"column_end":25},"name":"old_end_position","qualname":"::InputEdit::old_end_position","value":"Point","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":890},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2244,"byte_end":2260,"line_start":72,"line_end":72,"column_start":9,"column_end":25},"name":"new_end_position","qualname":"::InputEdit::new_end_position","value":"Point","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":903},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2369,"byte_end":2373,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"Node","qualname":"::Node","value":"","parent":null,"children":[],"decl_id":null,"docs":" A single node within a syntax `Tree`.\n","sig":null,"attributes":[{"value":"/ A single node within a syntax `Tree`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2272,"byte_end":2313,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"repr(transparent)","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2337,"byte_end":2357,"line_start":77,"line_end":77,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":94},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2512,"byte_end":2518,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Parser","qualname":"::Parser","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stateful object that this is used to produce a `Tree` based on some source code.\n","sig":null,"attributes":[{"value":"/ A stateful object that this is used to produce a `Tree` based on some source code.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2414,"byte_end":2500,"line_start":80,"line_end":80,"column_start":1,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":914},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2627,"byte_end":2632,"line_start":86,"line_end":86,"column_start":5,"column_end":10},"name":"Parse","qualname":"::LogType::Parse","value":"LogType::Parse","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":916},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2638,"byte_end":2641,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"Lex","qualname":"::LogType::Lex","value":"LogType::Lex","parent":{"krate":0,"index":913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":913},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2613,"byte_end":2620,"line_start":85,"line_end":85,"column_start":10,"column_end":17},"name":"LogType","qualname":"::LogType","value":"pub enum LogType { Parse, Lex, }","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":916}],"decl_id":null,"docs":" A type of log message.\n","sig":null,"attributes":[{"value":"/ A type of log message.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2545,"byte_end":2571,"line_start":83,"line_end":83,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":99},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2832,"byte_end":2842,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"TreeCursor","qualname":"::TreeCursor","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stateful object for walking a syntax `Tree` efficiently.\n","sig":null,"attributes":[{"value":"/ A stateful object for walking a syntax `Tree` efficiently.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2758,"byte_end":2820,"line_start":93,"line_end":93,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":926},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2974,"byte_end":2979,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"Query","qualname":"::Query","value":"Query {  }","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933}],"decl_id":null,"docs":" A set of patterns that match nodes in a syntax tree.\n","sig":null,"attributes":[{"value":"/ A set of patterns that match nodes in a syntax tree.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":2889,"byte_end":2945,"line_start":96,"line_end":96,"column_start":1,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":937},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":3421,"byte_end":3425,"line_start":111,"line_end":111,"column_start":5,"column_end":9},"name":"Zero","qualname":"::CaptureQuantifier::Zero","value":"CaptureQuantifier::Zero","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":939},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":3431,"byte_end":3440,"line_start":112,"line_end":112,"column_start":5,"column_end":14},"name":"ZeroOrOne","qualname":"::CaptureQuantifier::ZeroOrOne","value":"CaptureQuantifier::ZeroOrOne","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":941},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":3446,"byte_end":3456,"line_start":113,"line_end":113,"column_start":5,"column_end":15},"name":"ZeroOrMore","qualname":"::CaptureQuantifier::ZeroOrMore","value":"CaptureQuantifier::ZeroOrMore","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":943},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":3462,"byte_end":3465,"line_start":114,"line_end":114,"column_start":5,"column_end":8},"name":"One","qualname":"::CaptureQuantifier::One","value":"CaptureQuantifier::One","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":945},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":3471,"byte_end":3480,"line_start":115,"line_end":115,"column_start":5,"column_end":14},"name":"OneOrMore","qualname":"::CaptureQuantifier::OneOrMore","value":"CaptureQuantifier::OneOrMore","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":936},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":3397,"byte_end":3414,"line_start":110,"line_end":110,"column_start":10,"column_end":27},"name":"CaptureQuantifier","qualname":"::CaptureQuantifier","value":"pub enum CaptureQuantifier { Zero, ZeroOrOne, ZeroOrMore, One, OneOrMore, }","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945}],"decl_id":null,"docs":" A quantifier for captures\n","sig":null,"attributes":[{"value":"/ A quantifier for captures","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":3313,"byte_end":3342,"line_start":108,"line_end":108,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":106},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4172,"byte_end":4183,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"QueryCursor","qualname":"::QueryCursor","value":"QueryCursor {  }","parent":null,"children":[{"krate":0,"index":107}],"decl_id":null,"docs":" A stateful object for executing a `Query` on a syntax `Tree`.\n","sig":null,"attributes":[{"value":"/ A stateful object for executing a `Query` on a syntax `Tree`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4095,"byte_end":4160,"line_start":131,"line_end":131,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":958},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4342,"byte_end":4355,"line_start":138,"line_end":138,"column_start":12,"column_end":25},"name":"QueryProperty","qualname":"::QueryProperty","value":"QueryProperty { key, value, capture_id }","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961}],"decl_id":null,"docs":" A key-value pair associated with a particular pattern in a `Query`.\n","sig":null,"attributes":[{"value":"/ A key-value pair associated with a particular pattern in a `Query`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4227,"byte_end":4298,"line_start":136,"line_end":136,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":959},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4366,"byte_end":4369,"line_start":139,"line_end":139,"column_start":9,"column_end":12},"name":"key","qualname":"::QueryProperty::key","value":"std::boxed::Box<str>","parent":{"krate":0,"index":958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":960},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4389,"byte_end":4394,"line_start":140,"line_end":140,"column_start":9,"column_end":14},"name":"value","qualname":"::QueryProperty::value","value":"std::option::Option<std::boxed::Box<str>>","parent":{"krate":0,"index":958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":961},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4422,"byte_end":4432,"line_start":141,"line_end":141,"column_start":9,"column_end":19},"name":"capture_id","qualname":"::QueryProperty::capture_id","value":"std::option::Option<usize>","parent":{"krate":0,"index":958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":972},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4517,"byte_end":4524,"line_start":146,"line_end":146,"column_start":5,"column_end":12},"name":"Capture","qualname":"::QueryPredicateArg::Capture","value":"QueryPredicateArg::Capture(u32)","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":975},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4535,"byte_end":4541,"line_start":147,"line_end":147,"column_start":5,"column_end":11},"name":"String","qualname":"::QueryPredicateArg::String","value":"QueryPredicateArg::String(Box<str>)","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":971},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4493,"byte_end":4510,"line_start":145,"line_end":145,"column_start":10,"column_end":27},"name":"QueryPredicateArg","qualname":"::QueryPredicateArg","value":"pub enum QueryPredicateArg { Capture(u32), String(Box<str>), }","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":975}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":987},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4671,"byte_end":4685,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"QueryPredicate","qualname":"::QueryPredicate","value":"QueryPredicate { operator, args }","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989}],"decl_id":null,"docs":" A key-value pair associated with a particular pattern in a `Query`.\n","sig":null,"attributes":[{"value":"/ A key-value pair associated with a particular pattern in a `Query`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4556,"byte_end":4627,"line_start":150,"line_end":150,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":988},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4696,"byte_end":4704,"line_start":153,"line_end":153,"column_start":9,"column_end":17},"name":"operator","qualname":"::QueryPredicate::operator","value":"std::boxed::Box<str>","parent":{"krate":0,"index":987},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":989},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4724,"byte_end":4728,"line_start":154,"line_end":154,"column_start":9,"column_end":13},"name":"args","qualname":"::QueryPredicate::args","value":"std::vec::Vec<QueryPredicateArg>","parent":{"krate":0,"index":987},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":108},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4825,"byte_end":4835,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"QueryMatch","qualname":"::QueryMatch","value":"QueryMatch { pattern_index, captures }","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":" A match of a `Query` to a particular set of `Node`s.\n","sig":null,"attributes":[{"value":"/ A match of a `Query` to a particular set of `Node`s.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4757,"byte_end":4813,"line_start":157,"line_end":157,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":111},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4862,"byte_end":4875,"line_start":159,"line_end":159,"column_start":9,"column_end":22},"name":"pattern_index","qualname":"::QueryMatch::pattern_index","value":"usize","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":112},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4892,"byte_end":4900,"line_start":160,"line_end":160,"column_start":9,"column_end":17},"name":"captures","qualname":"::QueryMatch::captures","value":"&'cursor [QueryCapture<'tree>]","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":115},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":5070,"byte_end":5082,"line_start":166,"line_end":166,"column_start":12,"column_end":24},"name":"QueryMatches","qualname":"::QueryMatches","value":"QueryMatches {  }","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"decl_id":null,"docs":" A sequence of `QueryMatch`es associated with a given `QueryCursor`.\n","sig":null,"attributes":[{"value":"/ A sequence of `QueryMatch`es associated with a given `QueryCursor`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":4987,"byte_end":5058,"line_start":165,"line_end":165,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":125},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":5365,"byte_end":5378,"line_start":176,"line_end":176,"column_start":12,"column_end":25},"name":"QueryCaptures","qualname":"::QueryCaptures","value":"QueryCaptures {  }","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" A sequence of `QueryCapture`s associated with a given `QueryCursor`.\n","sig":null,"attributes":[{"value":"/ A sequence of `QueryCapture`s associated with a given `QueryCursor`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":5281,"byte_end":5353,"line_start":175,"line_end":175,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":135},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":5587,"byte_end":5599,"line_start":185,"line_end":185,"column_start":11,"column_end":23},"name":"TextProvider","qualname":"::TextProvider","value":"TextProvider<'a>","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":137},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":5615,"byte_end":5616,"line_start":186,"line_end":186,"column_start":10,"column_end":11},"name":"I","qualname":"::TextProvider::I","value":"type I: Iterator<Item = &'a [u8]> + 'a;","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":5657,"byte_end":5661,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"text","qualname":"::TextProvider::text","value":"pub fn text(&mut Self, Node) -> Self::I","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":999},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":5840,"byte_end":5852,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"QueryCapture","qualname":"::QueryCapture","value":"QueryCapture { node, index }","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002}],"decl_id":null,"docs":" A particular `Node` that has been captured with a particular name within a `Query`.\n","sig":null,"attributes":[{"value":"/ A particular `Node` that has been captured with a particular name within a `Query`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":5700,"byte_end":5787,"line_start":190,"line_end":190,"column_start":1,"column_end":88}},{"value":"repr(C)","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":5818,"byte_end":5828,"line_start":192,"line_end":192,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":5867,"byte_end":5871,"line_start":194,"line_end":194,"column_start":9,"column_end":13},"name":"node","qualname":"::QueryCapture::node","value":"Node<'a>","parent":{"krate":0,"index":999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":5891,"byte_end":5896,"line_start":195,"line_end":195,"column_start":9,"column_end":14},"name":"index","qualname":"::QueryCapture::index","value":"u32","parent":{"krate":0,"index":999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6040,"byte_end":6053,"line_start":200,"line_end":200,"column_start":12,"column_end":25},"name":"LanguageError","qualname":"::LanguageError","value":"LanguageError {  }","parent":null,"children":[{"krate":0,"index":1012}],"decl_id":null,"docs":" An error that occurred when trying to assign an incompatible `Language` to a `Parser`.\n","sig":null,"attributes":[{"value":"/ An error that occurred when trying to assign an incompatible `Language` to a `Parser`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":5906,"byte_end":5996,"line_start":198,"line_end":198,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6183,"byte_end":6202,"line_start":206,"line_end":206,"column_start":12,"column_end":31},"name":"IncludedRangesError","qualname":"::IncludedRangesError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that occurred in `Parser::set_included_ranges`.\n","sig":null,"attributes":[{"value":"/ An error that occurred in `Parser::set_included_ranges`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6079,"byte_end":6139,"line_start":204,"line_end":204,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6203,"byte_end":6212,"line_start":206,"line_end":206,"column_start":32,"column_end":41},"name":"0","qualname":"::IncludedRangesError::0","value":"usize","parent":{"krate":0,"index":1022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6319,"byte_end":6329,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"QueryError","qualname":"::QueryError","value":"QueryError { row, column, offset, message, kind }","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039}],"decl_id":null,"docs":" An error that occurred when trying to create a `Query`.\n","sig":null,"attributes":[{"value":"/ An error that occurred when trying to create a `Query`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6216,"byte_end":6275,"line_start":208,"line_end":208,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6340,"byte_end":6343,"line_start":211,"line_end":211,"column_start":9,"column_end":12},"name":"row","qualname":"::QueryError::row","value":"usize","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6360,"byte_end":6366,"line_start":212,"line_end":212,"column_start":9,"column_end":15},"name":"column","qualname":"::QueryError::column","value":"usize","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6383,"byte_end":6389,"line_start":213,"line_end":213,"column_start":9,"column_end":15},"name":"offset","qualname":"::QueryError::offset","value":"usize","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6406,"byte_end":6413,"line_start":214,"line_end":214,"column_start":9,"column_end":16},"name":"message","qualname":"::QueryError::message","value":"std::string::String","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6431,"byte_end":6435,"line_start":215,"line_end":215,"column_start":9,"column_end":13},"name":"kind","qualname":"::QueryError::kind","value":"QueryErrorKind","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6518,"byte_end":6524,"line_start":220,"line_end":220,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::QueryErrorKind::Syntax","value":"QueryErrorKind::Syntax","parent":{"krate":0,"index":1049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6530,"byte_end":6538,"line_start":221,"line_end":221,"column_start":5,"column_end":13},"name":"NodeType","qualname":"::QueryErrorKind::NodeType","value":"QueryErrorKind::NodeType","parent":{"krate":0,"index":1049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6544,"byte_end":6549,"line_start":222,"line_end":222,"column_start":5,"column_end":10},"name":"Field","qualname":"::QueryErrorKind::Field","value":"QueryErrorKind::Field","parent":{"krate":0,"index":1049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6555,"byte_end":6562,"line_start":223,"line_end":223,"column_start":5,"column_end":12},"name":"Capture","qualname":"::QueryErrorKind::Capture","value":"QueryErrorKind::Capture","parent":{"krate":0,"index":1049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6568,"byte_end":6577,"line_start":224,"line_end":224,"column_start":5,"column_end":14},"name":"Predicate","qualname":"::QueryErrorKind::Predicate","value":"QueryErrorKind::Predicate","parent":{"krate":0,"index":1049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6583,"byte_end":6592,"line_start":225,"line_end":225,"column_start":5,"column_end":14},"name":"Structure","qualname":"::QueryErrorKind::Structure","value":"QueryErrorKind::Structure","parent":{"krate":0,"index":1049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6598,"byte_end":6606,"line_start":226,"line_end":226,"column_start":5,"column_end":13},"name":"Language","qualname":"::QueryErrorKind::Language","value":"QueryErrorKind::Language","parent":{"krate":0,"index":1049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6497,"byte_end":6511,"line_start":219,"line_end":219,"column_start":10,"column_end":24},"name":"QueryErrorKind","qualname":"::QueryErrorKind","value":"pub enum QueryErrorKind {\n    Syntax,\n    NodeType,\n    Field,\n    Capture,\n    Predicate,\n    Structure,\n    Language,\n}","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1062}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6899,"byte_end":6908,"line_start":238,"line_end":238,"column_start":12,"column_end":21},"name":"LossyUtf8","qualname":"::LossyUtf8","value":"LossyUtf8 {  }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":7130,"byte_end":7137,"line_start":246,"line_end":246,"column_start":12,"column_end":19},"name":"version","qualname":"<Language>::version","value":"pub fn version(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the ABI version number that indicates which version of the Tree-sitter CLI\n that was used to generate this `Language`.\n","sig":null,"attributes":[{"value":"/ Get the ABI version number that indicates which version of the Tree-sitter CLI","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6985,"byte_end":7067,"line_start":244,"line_end":244,"column_start":5,"column_end":87}},{"value":"/ that was used to generate this `Language`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":7072,"byte_end":7118,"line_start":245,"line_end":245,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":7299,"byte_end":7314,"line_start":251,"line_end":251,"column_start":12,"column_end":27},"name":"node_kind_count","qualname":"<Language>::node_kind_count","value":"pub fn node_kind_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of distinct node types in this language.\n","sig":null,"attributes":[{"value":"/ Get the number of distinct node types in this language.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":7228,"byte_end":7287,"line_start":250,"line_end":250,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":7483,"byte_end":7499,"line_start":256,"line_end":256,"column_start":12,"column_end":28},"name":"node_kind_for_id","qualname":"<Language>::node_kind_for_id","value":"pub fn node_kind_for_id(&Self, u16) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the node kind for the given numerical id.\n","sig":null,"attributes":[{"value":"/ Get the name of the node kind for the given numerical id.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":7410,"byte_end":7471,"line_start":255,"line_end":255,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":7821,"byte_end":7837,"line_start":266,"line_end":266,"column_start":12,"column_end":28},"name":"id_for_node_kind","qualname":"<Language>::id_for_node_kind","value":"pub fn id_for_node_kind(&Self, &str, bool) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the numeric id for the given node kind.\n","sig":null,"attributes":[{"value":"/ Get the numeric id for the given node kind.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":7762,"byte_end":7809,"line_start":265,"line_end":265,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":8240,"byte_end":8258,"line_start":279,"line_end":279,"column_start":12,"column_end":30},"name":"node_kind_is_named","qualname":"<Language>::node_kind_is_named","value":"pub fn node_kind_is_named(&Self, u16) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the node type for the given numerical id is named (as opposed\n to an anonymous node type).\n","sig":null,"attributes":[{"value":"/ Check if the node type for the given numerical id is named (as opposed","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":8118,"byte_end":8192,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ to an anonymous node type).","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":8197,"byte_end":8228,"line_start":278,"line_end":278,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":8404,"byte_end":8424,"line_start":283,"line_end":283,"column_start":12,"column_end":32},"name":"node_kind_is_visible","qualname":"<Language>::node_kind_is_visible","value":"pub fn node_kind_is_visible(&Self, u16) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":8657,"byte_end":8668,"line_start":290,"line_end":290,"column_start":12,"column_end":23},"name":"field_count","qualname":"<Language>::field_count","value":"pub fn field_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of distinct field names in this language.\n","sig":null,"attributes":[{"value":"/ Get the number of distinct field names in this language.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":8585,"byte_end":8645,"line_start":289,"line_end":289,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":8826,"byte_end":8843,"line_start":295,"line_end":295,"column_start":12,"column_end":29},"name":"field_name_for_id","qualname":"<Language>::field_name_for_id","value":"pub fn field_name_for_id(&Self, u16) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Get the field names for the given numerical id.\n","sig":null,"attributes":[{"value":"/ Get the field names for the given numerical id.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":8763,"byte_end":8814,"line_start":294,"line_end":294,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":9186,"byte_end":9203,"line_start":305,"line_end":305,"column_start":12,"column_end":29},"name":"field_id_for_name","qualname":"<Language>::field_id_for_name","value":"pub fn field_id_for_name<impl AsRef<[u8]>: AsRef<[u8]>>(&Self,\n                                                        impl AsRef<[u8]>)\n-> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Get the numerical id for the given field name.\n","sig":null,"attributes":[{"value":"/ Get the numerical id for the given field name.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":9124,"byte_end":9174,"line_start":304,"line_end":304,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":9671,"byte_end":9674,"line_start":324,"line_end":324,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"pub fn new() -> Parser","parent":null,"children":[],"decl_id":null,"docs":" Create a new parser.\n","sig":null,"attributes":[{"value":"/ Create a new parser.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":9635,"byte_end":9659,"line_start":323,"line_end":323,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":10398,"byte_end":10410,"line_start":339,"line_end":339,"column_start":12,"column_end":24},"name":"set_language","qualname":"<Parser>::set_language","value":"pub fn set_language(&mut Self, Language) -> Result<(), LanguageError>","parent":null,"children":[],"decl_id":null,"docs":" Set the language that the parser should use for parsing.","sig":null,"attributes":[{"value":"/ Set the language that the parser should use for parsing.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":9825,"byte_end":9885,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":9890,"byte_end":9893,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Returns a Result indicating whether or not the language was successfully","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":9898,"byte_end":9974,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/ assigned. True means assignment succeeded. False means there was a version","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":9979,"byte_end":10057,"line_start":334,"line_end":334,"column_start":5,"column_end":83}},{"value":"/ mismatch: the language was generated with an incompatible version of the","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":10062,"byte_end":10138,"line_start":335,"line_end":335,"column_start":5,"column_end":81}},{"value":"/ Tree-sitter CLI. Check the language's version using [Language::version]","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":10143,"byte_end":10218,"line_start":336,"line_end":336,"column_start":5,"column_end":80}},{"value":"/ and compare it to this library's [LANGUAGE_VERSION](LANGUAGE_VERSION) and","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":10223,"byte_end":10300,"line_start":337,"line_end":337,"column_start":5,"column_end":82}},{"value":"/ [MIN_COMPATIBLE_LANGUAGE_VERSION](MIN_COMPATIBLE_LANGUAGE_VERSION) constants.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":10305,"byte_end":10386,"line_start":338,"line_end":338,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":10859,"byte_end":10867,"line_start":352,"line_end":352,"column_start":12,"column_end":20},"name":"language","qualname":"<Parser>::language","value":"pub fn language(&Self) -> Option<Language>","parent":null,"children":[],"decl_id":null,"docs":" Get the parser's current language.\n","sig":null,"attributes":[{"value":"/ Get the parser's current language.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":10809,"byte_end":10847,"line_start":351,"line_end":351,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":11130,"byte_end":11136,"line_start":362,"line_end":362,"column_start":12,"column_end":18},"name":"logger","qualname":"<Parser>::logger","value":"pub fn logger(&Self) -> Option<&Logger>","parent":null,"children":[],"decl_id":null,"docs":" Get the parser's current logger.\n","sig":null,"attributes":[{"value":"/ Get the parser's current logger.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":11082,"byte_end":11118,"line_start":361,"line_end":361,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":11389,"byte_end":11399,"line_start":368,"line_end":368,"column_start":12,"column_end":22},"name":"set_logger","qualname":"<Parser>::set_logger","value":"pub fn set_logger(&mut Self, Option<Logger>)","parent":null,"children":[],"decl_id":null,"docs":" Set the logging callback that a parser should use during parsing.\n","sig":null,"attributes":[{"value":"/ Set the logging callback that a parser should use during parsing.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":11308,"byte_end":11377,"line_start":367,"line_end":367,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13099,"byte_end":13115,"line_start":415,"line_end":415,"column_start":12,"column_end":28},"name":"print_dot_graphs","qualname":"<Parser>::print_dot_graphs","value":"pub fn print_dot_graphs<impl AsRawFd: AsRawFd>(&mut Self, &impl AsRawFd)","parent":null,"children":[],"decl_id":null,"docs":" Set the destination to which the parser should write debugging graphs\n during parsing. The graphs are formatted in the DOT language. You may want\n to pipe these graphs directly to a `dot(1)` process in order to generate\n SVG output.\n","sig":null,"attributes":[{"value":"/ Set the destination to which the parser should write debugging graphs","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":12813,"byte_end":12886,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ during parsing. The graphs are formatted in the DOT language. You may want","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":12891,"byte_end":12969,"line_start":411,"line_end":411,"column_start":5,"column_end":83}},{"value":"/ to pipe these graphs directly to a `dot(1)` process in order to generate","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":12974,"byte_end":13050,"line_start":412,"line_end":412,"column_start":5,"column_end":81}},{"value":"/ SVG output.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13055,"byte_end":13070,"line_start":413,"line_end":413,"column_start":5,"column_end":20}},{"value":"cfg(unix)","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13075,"byte_end":13087,"line_start":414,"line_end":414,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13355,"byte_end":13379,"line_start":421,"line_end":421,"column_start":12,"column_end":36},"name":"stop_printing_dot_graphs","qualname":"<Parser>::stop_printing_dot_graphs","value":"pub fn stop_printing_dot_graphs(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop the parser from printing debugging graphs while parsing.\n","sig":null,"attributes":[{"value":"/ Stop the parser from printing debugging graphs while parsing.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13278,"byte_end":13343,"line_start":420,"line_end":420,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":14154,"byte_end":14159,"line_start":438,"line_end":438,"column_start":12,"column_end":17},"name":"parse","qualname":"<Parser>::parse","value":"pub fn parse<impl AsRef<[u8]>: AsRef<[u8]>>(&mut Self, impl AsRef<[u8]>,\n                                            Option<&Tree>) -> Option<Tree>","parent":null,"children":[],"decl_id":null,"docs":" Parse a slice of UTF8 text.","sig":null,"attributes":[{"value":"/ Parse a slice of UTF8 text.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13476,"byte_end":13507,"line_start":425,"line_end":425,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13512,"byte_end":13515,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13520,"byte_end":13536,"line_start":427,"line_end":427,"column_start":5,"column_end":21}},{"value":"/ * `text` The UTF8-encoded text to parse.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13541,"byte_end":13585,"line_start":428,"line_end":428,"column_start":5,"column_end":49}},{"value":"/ * `old_tree` A previous syntax tree parsed from the same document.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13590,"byte_end":13660,"line_start":429,"line_end":429,"column_start":5,"column_end":75}},{"value":"/   If the text of the document has changed since `old_tree` was","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13665,"byte_end":13731,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/   created, then you must edit `old_tree` to match the new text using","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13736,"byte_end":13808,"line_start":431,"line_end":431,"column_start":5,"column_end":77}},{"value":"/   [Tree::edit].","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13813,"byte_end":13832,"line_start":432,"line_end":432,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13837,"byte_end":13840,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Returns a [Tree] if parsing succeeded, or `None` if:","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13845,"byte_end":13901,"line_start":434,"line_end":434,"column_start":5,"column_end":61}},{"value":"/  * The parser has not yet had a language assigned with [Parser::set_language]","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13906,"byte_end":13987,"line_start":435,"line_end":435,"column_start":5,"column_end":86}},{"value":"/  * The timeout set with [Parser::set_timeout_micros] expired","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":13992,"byte_end":14056,"line_start":436,"line_end":436,"column_start":5,"column_end":69}},{"value":"/  * The cancellation flag set with [Parser::set_cancellation_flag] was flipped","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":14061,"byte_end":14142,"line_start":437,"line_end":437,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":14807,"byte_end":14818,"line_start":455,"line_end":455,"column_start":12,"column_end":23},"name":"parse_utf16","qualname":"<Parser>::parse_utf16","value":"pub fn parse_utf16<impl AsRef<[u16]>: AsRef<[u16]>>(&mut Self,\n                                                    impl AsRef<[u16]>,\n                                                    Option<&Tree>)\n-> Option<Tree>","parent":null,"children":[],"decl_id":null,"docs":" Parse a slice of UTF16 text.","sig":null,"attributes":[{"value":"/ Parse a slice of UTF16 text.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":14437,"byte_end":14469,"line_start":447,"line_end":447,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":14474,"byte_end":14477,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":14482,"byte_end":14498,"line_start":449,"line_end":449,"column_start":5,"column_end":21}},{"value":"/ * `text` The UTF16-encoded text to parse.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":14503,"byte_end":14548,"line_start":450,"line_end":450,"column_start":5,"column_end":50}},{"value":"/ * `old_tree` A previous syntax tree parsed from the same document.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":14553,"byte_end":14623,"line_start":451,"line_end":451,"column_start":5,"column_end":75}},{"value":"/   If the text of the document has changed since `old_tree` was","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":14628,"byte_end":14694,"line_start":452,"line_end":452,"column_start":5,"column_end":71}},{"value":"/   created, then you must edit `old_tree` to match the new text using","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":14699,"byte_end":14771,"line_start":453,"line_end":453,"column_start":5,"column_end":77}},{"value":"/   [Tree::edit].","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":14776,"byte_end":14795,"line_start":454,"line_end":454,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":15804,"byte_end":15814,"line_start":479,"line_end":479,"column_start":12,"column_end":22},"name":"parse_with","qualname":"<Parser>::parse_with","value":"pub fn parse_with<'a, T: AsRef<[u8]>, F: FnMut(usize, Point) ->\n                  T>(&mut Self, &mut F, Option<&Tree>) -> Option<Tree>","parent":null,"children":[],"decl_id":null,"docs":" Parse UTF8 text provided in chunks by a callback.","sig":null,"attributes":[{"value":"/ Parse UTF8 text provided in chunks by a callback.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":15154,"byte_end":15207,"line_start":468,"line_end":468,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":15212,"byte_end":15215,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":15220,"byte_end":15236,"line_start":470,"line_end":470,"column_start":5,"column_end":21}},{"value":"/ * `callback` A function that takes a byte offset and position and","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":15241,"byte_end":15310,"line_start":471,"line_end":471,"column_start":5,"column_end":74}},{"value":"/   returns a slice of UTF8-encoded text starting at that byte offset","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":15315,"byte_end":15386,"line_start":472,"line_end":472,"column_start":5,"column_end":76}},{"value":"/   and position. The slices can be of any length. If the given position","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":15391,"byte_end":15465,"line_start":473,"line_end":473,"column_start":5,"column_end":79}},{"value":"/   is at the end of the text, the callback should return an empty slice.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":15470,"byte_end":15545,"line_start":474,"line_end":474,"column_start":5,"column_end":80}},{"value":"/ * `old_tree` A previous syntax tree parsed from the same document.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":15550,"byte_end":15620,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/   If the text of the document has changed since `old_tree` was","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":15625,"byte_end":15691,"line_start":476,"line_end":476,"column_start":5,"column_end":71}},{"value":"/   created, then you must edit `old_tree` to match the new text using","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":15696,"byte_end":15768,"line_start":477,"line_end":477,"column_start":5,"column_end":77}},{"value":"/   [Tree::edit].","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":15773,"byte_end":15792,"line_start":478,"line_end":478,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":18162,"byte_end":18178,"line_start":529,"line_end":529,"column_start":12,"column_end":28},"name":"parse_utf16_with","qualname":"<Parser>::parse_utf16_with","value":"pub fn parse_utf16_with<'a, T: AsRef<[u16]>, F: FnMut(usize, Point) ->\n                        T>(&mut Self, &mut F, Option<&Tree>) -> Option<Tree>","parent":null,"children":[],"decl_id":null,"docs":" Parse UTF16 text provided in chunks by a callback.","sig":null,"attributes":[{"value":"/ Parse UTF16 text provided in chunks by a callback.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":17504,"byte_end":17558,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":17563,"byte_end":17566,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":17571,"byte_end":17587,"line_start":520,"line_end":520,"column_start":5,"column_end":21}},{"value":"/ * `callback` A function that takes a code point offset and position and","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":17592,"byte_end":17667,"line_start":521,"line_end":521,"column_start":5,"column_end":80}},{"value":"/   returns a slice of UTF16-encoded text starting at that byte offset","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":17672,"byte_end":17744,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/   and position. The slices can be of any length. If the given position","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":17749,"byte_end":17823,"line_start":523,"line_end":523,"column_start":5,"column_end":79}},{"value":"/   is at the end of the text, the callback should return an empty slice.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":17828,"byte_end":17903,"line_start":524,"line_end":524,"column_start":5,"column_end":80}},{"value":"/ * `old_tree` A previous syntax tree parsed from the same document.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":17908,"byte_end":17978,"line_start":525,"line_end":525,"column_start":5,"column_end":75}},{"value":"/   If the text of the document has changed since `old_tree` was","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":17983,"byte_end":18049,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/   created, then you must edit `old_tree` to match the new text using","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":18054,"byte_end":18126,"line_start":527,"line_end":527,"column_start":5,"column_end":77}},{"value":"/   [Tree::edit].","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":18131,"byte_end":18150,"line_start":528,"line_end":528,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20459,"byte_end":20464,"line_start":580,"line_end":580,"column_start":12,"column_end":17},"name":"reset","qualname":"<Parser>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Instruct the parser to start the next parse from the beginning.","sig":null,"attributes":[{"value":"/ Instruct the parser to start the next parse from the beginning.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20036,"byte_end":20103,"line_start":574,"line_end":574,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20108,"byte_end":20111,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ If the parser previously failed because of a timeout or a cancellation, then","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20116,"byte_end":20196,"line_start":576,"line_end":576,"column_start":5,"column_end":85}},{"value":"/ by default, it will resume where it left off on the next call to `parse` or","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20201,"byte_end":20280,"line_start":577,"line_end":577,"column_start":5,"column_end":84}},{"value":"/ other parsing functions. If you don't want to resume, and instead intend to","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20285,"byte_end":20364,"line_start":578,"line_end":578,"column_start":5,"column_end":84}},{"value":"/ use this parser to parse some other document, you must call `reset` first.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20369,"byte_end":20447,"line_start":579,"line_end":579,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20709,"byte_end":20723,"line_start":587,"line_end":587,"column_start":12,"column_end":26},"name":"timeout_micros","qualname":"<Parser>::timeout_micros","value":"pub fn timeout_micros(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the duration in microseconds that parsing is allowed to take.","sig":null,"attributes":[{"value":"/ Get the duration in microseconds that parsing is allowed to take.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20546,"byte_end":20615,"line_start":584,"line_end":584,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20620,"byte_end":20623,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ This is set via [set_timeout_micros](Parser::set_timeout_micros).","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20628,"byte_end":20697,"line_start":586,"line_end":586,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21067,"byte_end":21085,"line_start":596,"line_end":596,"column_start":12,"column_end":30},"name":"set_timeout_micros","qualname":"<Parser>::set_timeout_micros","value":"pub fn set_timeout_micros(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum duration in microseconds that parsing should be allowed to\n take before halting.","sig":null,"attributes":[{"value":"/ Set the maximum duration in microseconds that parsing should be allowed to","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20817,"byte_end":20895,"line_start":591,"line_end":591,"column_start":5,"column_end":83}},{"value":"/ take before halting.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20900,"byte_end":20924,"line_start":592,"line_end":592,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20929,"byte_end":20932,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ If parsing takes longer than this, it will halt early, returning `None`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":20937,"byte_end":21013,"line_start":594,"line_end":594,"column_start":5,"column_end":81}},{"value":"/ See `parse` for more information.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21018,"byte_end":21055,"line_start":595,"line_end":595,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":22134,"byte_end":22153,"line_start":616,"line_end":616,"column_start":12,"column_end":31},"name":"set_included_ranges","qualname":"<Parser>::set_included_ranges","value":"pub fn set_included_ranges<'a>(&mut Self, &'a [Range])\n-> Result<(), IncludedRangesError>","parent":null,"children":[],"decl_id":null,"docs":" Set the ranges of text that the parser should include when parsing.","sig":null,"attributes":[{"value":"/ Set the ranges of text that the parser should include when parsing.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21217,"byte_end":21288,"line_start":600,"line_end":600,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21293,"byte_end":21296,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ By default, the parser will always include entire documents. This function","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21301,"byte_end":21379,"line_start":602,"line_end":602,"column_start":5,"column_end":83}},{"value":"/ allows you to parse only a *portion* of a document but still return a syntax","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21384,"byte_end":21464,"line_start":603,"line_end":603,"column_start":5,"column_end":85}},{"value":"/ tree whose ranges match up with the document as a whole. You can also pass","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21469,"byte_end":21547,"line_start":604,"line_end":604,"column_start":5,"column_end":83}},{"value":"/ multiple disjoint ranges.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21552,"byte_end":21581,"line_start":605,"line_end":605,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21586,"byte_end":21589,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ If `ranges` is empty, then the entire document will be parsed. Otherwise,","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21594,"byte_end":21671,"line_start":607,"line_end":607,"column_start":5,"column_end":82}},{"value":"/ the given ranges must be ordered from earliest to latest in the document,","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21676,"byte_end":21753,"line_start":608,"line_end":608,"column_start":5,"column_end":82}},{"value":"/ and they must not overlap. That is, the following must hold for all","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21758,"byte_end":21829,"line_start":609,"line_end":609,"column_start":5,"column_end":76}},{"value":"/ `i` < `length - 1`:","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21834,"byte_end":21857,"line_start":610,"line_end":610,"column_start":5,"column_end":28}},{"value":"/ ```text","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21862,"byte_end":21873,"line_start":611,"line_end":611,"column_start":5,"column_end":16}},{"value":"/     ranges[i].end_byte <= ranges[i + 1].start_byte","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21878,"byte_end":21932,"line_start":612,"line_end":612,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21937,"byte_end":21944,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ If this requirement is not satisfied, method will return IncludedRangesError","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":21949,"byte_end":22029,"line_start":614,"line_end":614,"column_start":5,"column_end":85}},{"value":"/ error with an offset in the passed ranges slice pointing to a first incorrect range.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":22034,"byte_end":22122,"line_start":615,"line_end":615,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":23093,"byte_end":23110,"line_start":645,"line_end":645,"column_start":19,"column_end":36},"name":"cancellation_flag","qualname":"<Parser>::cancellation_flag","value":"pub unsafe fn cancellation_flag(&Self) -> Option<&AtomicUsize>","parent":null,"children":[],"decl_id":null,"docs":" Get the parser's current cancellation flag pointer.\n","sig":null,"attributes":[{"value":"/ Get the parser's current cancellation flag pointer.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":23019,"byte_end":23074,"line_start":644,"line_end":644,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":23568,"byte_end":23589,"line_start":654,"line_end":654,"column_start":19,"column_end":40},"name":"set_cancellation_flag","qualname":"<Parser>::set_cancellation_flag","value":"pub unsafe fn set_cancellation_flag(&mut Self, Option<&AtomicUsize>)","parent":null,"children":[],"decl_id":null,"docs":" Set the parser's current cancellation flag pointer.","sig":null,"attributes":[{"value":"/ Set the parser's current cancellation flag pointer.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":23246,"byte_end":23301,"line_start":649,"line_end":649,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":23306,"byte_end":23309,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ If a pointer is assigned, then the parser will periodically read from","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":23314,"byte_end":23387,"line_start":651,"line_end":651,"column_start":5,"column_end":78}},{"value":"/ this pointer during parsing. If it reads a non-zero value, it will halt early,","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":23392,"byte_end":23474,"line_start":652,"line_end":652,"column_start":5,"column_end":87}},{"value":"/ returning `None`. See [parse](Parser::parse) for more information.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":23479,"byte_end":23549,"line_start":653,"line_end":653,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":24196,"byte_end":24205,"line_start":676,"line_end":676,"column_start":12,"column_end":21},"name":"root_node","qualname":"<Tree>::root_node","value":"pub fn root_node(&Self) -> Node","parent":null,"children":[],"decl_id":null,"docs":" Get the root node of the syntax tree.\n","sig":null,"attributes":[{"value":"/ Get the root node of the syntax tree.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":24143,"byte_end":24184,"line_start":675,"line_end":675,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":24385,"byte_end":24393,"line_start":681,"line_end":681,"column_start":12,"column_end":20},"name":"language","qualname":"<Tree>::language","value":"pub fn language(&Self) -> Language","parent":null,"children":[],"decl_id":null,"docs":" Get the language that was used to parse the syntax tree.\n","sig":null,"attributes":[{"value":"/ Get the language that was used to parse the syntax tree.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":24313,"byte_end":24373,"line_start":680,"line_end":680,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":24717,"byte_end":24721,"line_start":690,"line_end":690,"column_start":12,"column_end":16},"name":"edit","qualname":"<Tree>::edit","value":"pub fn edit(&mut Self, &InputEdit)","parent":null,"children":[],"decl_id":null,"docs":" Edit the syntax tree to keep it in sync with source code that has been\n edited.","sig":null,"attributes":[{"value":"/ Edit the syntax tree to keep it in sync with source code that has been","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":24494,"byte_end":24568,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ edited.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":24573,"byte_end":24584,"line_start":686,"line_end":686,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":24589,"byte_end":24592,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ You must describe the edit both in terms of byte offsets and in terms of","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":24597,"byte_end":24673,"line_start":688,"line_end":688,"column_start":5,"column_end":81}},{"value":"/ row/column coordinates.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":24678,"byte_end":24705,"line_start":689,"line_end":689,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":24935,"byte_end":24939,"line_start":696,"line_end":696,"column_start":12,"column_end":16},"name":"walk","qualname":"<Tree>::walk","value":"pub fn walk(&Self) -> TreeCursor","parent":null,"children":[],"decl_id":null,"docs":" Create a new [TreeCursor] starting from the root of the tree.\n","sig":null,"attributes":[{"value":"/ Create a new [TreeCursor] starting from the root of the tree.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":24858,"byte_end":24923,"line_start":695,"line_end":695,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":25547,"byte_end":25561,"line_start":707,"line_end":707,"column_start":12,"column_end":26},"name":"changed_ranges","qualname":"<Tree>::changed_ranges","value":"pub fn changed_ranges(&Self, &Tree) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Compare this old edited syntax tree to a new syntax tree representing the same\n document, returning a sequence of ranges whose syntactic structure has changed.","sig":null,"attributes":[{"value":"/ Compare this old edited syntax tree to a new syntax tree representing the same","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":25006,"byte_end":25088,"line_start":700,"line_end":700,"column_start":5,"column_end":87}},{"value":"/ document, returning a sequence of ranges whose syntactic structure has changed.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":25093,"byte_end":25176,"line_start":701,"line_end":701,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":25181,"byte_end":25184,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ For this to work correctly, this syntax tree must have been edited such that its","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":25189,"byte_end":25273,"line_start":703,"line_end":703,"column_start":5,"column_end":89}},{"value":"/ ranges match up to the new tree. Generally, you'll want to call this method right","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":25278,"byte_end":25363,"line_start":704,"line_end":704,"column_start":5,"column_end":90}},{"value":"/ after calling one of the [Parser::parse] functions. Call it on the old tree that","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":25368,"byte_end":25452,"line_start":705,"line_end":705,"column_start":5,"column_end":89}},{"value":"/ was passed to parse, and pass the new tree that was returned from `parse`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":25457,"byte_end":25535,"line_start":706,"line_end":706,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26883,"byte_end":26885,"line_start":753,"line_end":753,"column_start":12,"column_end":14},"name":"id","qualname":"<Node>::id","value":"pub fn id(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get a numeric id for this node that is unique.","sig":null,"attributes":[{"value":"/ Get a numeric id for this node that is unique.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26557,"byte_end":26607,"line_start":747,"line_end":747,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26612,"byte_end":26615,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ Within a given syntax tree, no two nodes have the same id. However, if","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26620,"byte_end":26694,"line_start":749,"line_end":749,"column_start":5,"column_end":79}},{"value":"/ a new tree is created based on an older tree, and a node from the old","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26699,"byte_end":26772,"line_start":750,"line_end":750,"column_start":5,"column_end":78}},{"value":"/ tree is reused in the process, then that node will have the same id in","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26777,"byte_end":26851,"line_start":751,"line_end":751,"column_start":5,"column_end":79}},{"value":"/ both trees.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26856,"byte_end":26871,"line_start":752,"line_end":752,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26997,"byte_end":27004,"line_start":758,"line_end":758,"column_start":12,"column_end":19},"name":"kind_id","qualname":"<Node>::kind_id","value":"pub fn kind_id(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get this node's type as a numerical id.\n","sig":null,"attributes":[{"value":"/ Get this node's type as a numerical id.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26942,"byte_end":26985,"line_start":757,"line_end":757,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":27128,"byte_end":27132,"line_start":763,"line_end":763,"column_start":12,"column_end":16},"name":"kind","qualname":"<Node>::kind","value":"pub fn kind(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Get this node's type as a string.\n","sig":null,"attributes":[{"value":"/ Get this node's type as a string.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":27079,"byte_end":27116,"line_start":762,"line_end":762,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":27356,"byte_end":27364,"line_start":770,"line_end":770,"column_start":12,"column_end":20},"name":"language","qualname":"<Node>::language","value":"pub fn language(&Self) -> Language","parent":null,"children":[],"decl_id":null,"docs":" Get the [Language] that was used to parse this node's syntax tree.\n","sig":null,"attributes":[{"value":"/ Get the [Language] that was used to parse this node's syntax tree.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":27274,"byte_end":27344,"line_start":769,"line_end":769,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":27657,"byte_end":27665,"line_start":778,"line_end":778,"column_start":12,"column_end":20},"name":"is_named","qualname":"<Node>::is_named","value":"pub fn is_named(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this node is *named*.","sig":null,"attributes":[{"value":"/ Check if this node is *named*.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":27461,"byte_end":27495,"line_start":774,"line_end":774,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":27500,"byte_end":27503,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ Named nodes correspond to named rules in the grammar, whereas *anonymous* nodes","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":27508,"byte_end":27591,"line_start":776,"line_end":776,"column_start":5,"column_end":88}},{"value":"/ correspond to string literals in the grammar.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":27596,"byte_end":27645,"line_start":777,"line_end":777,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":27918,"byte_end":27926,"line_start":786,"line_end":786,"column_start":12,"column_end":20},"name":"is_extra","qualname":"<Node>::is_extra","value":"pub fn is_extra(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this node is *extra*.","sig":null,"attributes":[{"value":"/ Check if this node is *extra*.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":27743,"byte_end":27777,"line_start":782,"line_end":782,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":27782,"byte_end":27785,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ Extra nodes represent things like comments, which are not required the grammar,","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":27790,"byte_end":27873,"line_start":784,"line_end":784,"column_start":5,"column_end":88}},{"value":"/ but can appear anywhere.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":27878,"byte_end":27906,"line_start":785,"line_end":785,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28055,"byte_end":28066,"line_start":791,"line_end":791,"column_start":12,"column_end":23},"name":"has_changes","qualname":"<Node>::has_changes","value":"pub fn has_changes(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this node has been edited.\n","sig":null,"attributes":[{"value":"/ Check if this node has been edited.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28004,"byte_end":28043,"line_start":790,"line_end":790,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28265,"byte_end":28274,"line_start":797,"line_end":797,"column_start":12,"column_end":21},"name":"has_error","qualname":"<Node>::has_error","value":"pub fn has_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this node represents a syntax error or contains any syntax errors anywhere\n within it.\n","sig":null,"attributes":[{"value":"/ Check if this node represents a syntax error or contains any syntax errors anywhere","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28147,"byte_end":28234,"line_start":795,"line_end":795,"column_start":5,"column_end":92}},{"value":"/ within it.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28239,"byte_end":28253,"line_start":796,"line_end":796,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28537,"byte_end":28545,"line_start":805,"line_end":805,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Node>::is_error","value":"pub fn is_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this node represents a syntax error.","sig":null,"attributes":[{"value":"/ Check if this node represents a syntax error.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28353,"byte_end":28402,"line_start":801,"line_end":801,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28407,"byte_end":28410,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Syntax errors represent parts of the code that could not be incorporated into a","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28415,"byte_end":28498,"line_start":803,"line_end":803,"column_start":5,"column_end":88}},{"value":"/ valid syntax tree.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28503,"byte_end":28525,"line_start":804,"line_end":804,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28779,"byte_end":28789,"line_start":813,"line_end":813,"column_start":12,"column_end":22},"name":"is_missing","qualname":"<Node>::is_missing","value":"pub fn is_missing(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this node is *missing*.","sig":null,"attributes":[{"value":"/ Check if this node is *missing*.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28609,"byte_end":28645,"line_start":809,"line_end":809,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28650,"byte_end":28653,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ Missing nodes are inserted by the parser in order to recover from certain kinds of","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28658,"byte_end":28744,"line_start":811,"line_end":811,"column_start":5,"column_end":91}},{"value":"/ syntax errors.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28749,"byte_end":28767,"line_start":812,"line_end":812,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28929,"byte_end":28939,"line_start":818,"line_end":818,"column_start":12,"column_end":22},"name":"start_byte","qualname":"<Node>::start_byte","value":"pub fn start_byte(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the byte offsets where this node starts.\n","sig":null,"attributes":[{"value":"/ Get the byte offsets where this node starts.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":28869,"byte_end":28917,"line_start":817,"line_end":817,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":29086,"byte_end":29094,"line_start":823,"line_end":823,"column_start":12,"column_end":20},"name":"end_byte","qualname":"<Node>::end_byte","value":"pub fn end_byte(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the byte offsets where this node end.\n","sig":null,"attributes":[{"value":"/ Get the byte offsets where this node end.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":29029,"byte_end":29074,"line_start":822,"line_end":822,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":29258,"byte_end":29268,"line_start":828,"line_end":828,"column_start":12,"column_end":22},"name":"byte_range","qualname":"<Node>::byte_range","value":"pub fn byte_range(&Self) -> std::ops::Range<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the byte range of source code that this node represents.\n","sig":null,"attributes":[{"value":"/ Get the byte range of source code that this node represents.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":29182,"byte_end":29246,"line_start":827,"line_end":827,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":29495,"byte_end":29500,"line_start":834,"line_end":834,"column_start":12,"column_end":17},"name":"range","qualname":"<Node>::range","value":"pub fn range(&Self) -> Range","parent":null,"children":[],"decl_id":null,"docs":" Get the range of source code that this node represents, both in terms of raw bytes\n and of row/column coordinates.\n","sig":null,"attributes":[{"value":"/ Get the range of source code that this node represents, both in terms of raw bytes","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":29358,"byte_end":29444,"line_start":832,"line_end":832,"column_start":5,"column_end":91}},{"value":"/ and of row/column coordinates.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":29449,"byte_end":29483,"line_start":833,"line_end":833,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":29806,"byte_end":29820,"line_start":844,"line_end":844,"column_start":12,"column_end":26},"name":"start_position","qualname":"<Node>::start_position","value":"pub fn start_position(&Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Get this node's start position in terms of rows and columns.\n","sig":null,"attributes":[{"value":"/ Get this node's start position in terms of rows and columns.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":29730,"byte_end":29794,"line_start":843,"line_end":843,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30012,"byte_end":30024,"line_start":850,"line_end":850,"column_start":12,"column_end":24},"name":"end_position","qualname":"<Node>::end_position","value":"pub fn end_position(&Self) -> Point","parent":null,"children":[],"decl_id":null,"docs":" Get this node's end position in terms of rows and columns.\n","sig":null,"attributes":[{"value":"/ Get this node's end position in terms of rows and columns.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":29938,"byte_end":30000,"line_start":849,"line_end":849,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30443,"byte_end":30448,"line_start":861,"line_end":861,"column_start":12,"column_end":17},"name":"child","qualname":"<Node>::child","value":"pub fn child(&Self, usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the node's child at the given index, where zero represents the first\n child.","sig":null,"attributes":[{"value":"/ Get the node's child at the given index, where zero represents the first","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30140,"byte_end":30216,"line_start":855,"line_end":855,"column_start":5,"column_end":81}},{"value":"/ child.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30221,"byte_end":30231,"line_start":856,"line_end":856,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30236,"byte_end":30239,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ This method is fairly fast, but its cost is technically log(i), so you","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30244,"byte_end":30318,"line_start":858,"line_end":858,"column_start":5,"column_end":79}},{"value":"/ if you might be iterating over a long list of children, you should use","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30323,"byte_end":30397,"line_start":859,"line_end":859,"column_start":5,"column_end":79}},{"value":"/ [Node::children] instead.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30402,"byte_end":30431,"line_start":860,"line_end":860,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30613,"byte_end":30624,"line_start":866,"line_end":866,"column_start":12,"column_end":23},"name":"child_count","qualname":"<Node>::child_count","value":"pub fn child_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get this node's number of children.\n","sig":null,"attributes":[{"value":"/ Get this node's number of children.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30562,"byte_end":30601,"line_start":865,"line_end":865,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":31021,"byte_end":31032,"line_start":876,"line_end":876,"column_start":12,"column_end":23},"name":"named_child","qualname":"<Node>::named_child","value":"pub fn named_child<'a>(&'a Self, usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get this node's *named* child at the given index.","sig":null,"attributes":[{"value":"/ Get this node's *named* child at the given index.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30715,"byte_end":30768,"line_start":870,"line_end":870,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30773,"byte_end":30776,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ See also [Node::is_named].","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30781,"byte_end":30811,"line_start":872,"line_end":872,"column_start":5,"column_end":35}},{"value":"/ This method is fairly fast, but its cost is technically log(i), so you","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30816,"byte_end":30890,"line_start":873,"line_end":873,"column_start":5,"column_end":79}},{"value":"/ if you might be iterating over a long list of children, you should use","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30895,"byte_end":30969,"line_start":874,"line_end":874,"column_start":5,"column_end":79}},{"value":"/ [Node::named_children] instead.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":30974,"byte_end":31009,"line_start":875,"line_end":875,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":31261,"byte_end":31278,"line_start":883,"line_end":883,"column_start":12,"column_end":29},"name":"named_child_count","qualname":"<Node>::named_child_count","value":"pub fn named_child_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get this node's number of *named* children.","sig":null,"attributes":[{"value":"/ Get this node's number of *named* children.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":31159,"byte_end":31206,"line_start":880,"line_end":880,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":31211,"byte_end":31214,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ See also [Node::is_named].","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":31219,"byte_end":31249,"line_start":882,"line_end":882,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":31585,"byte_end":31604,"line_start":891,"line_end":891,"column_start":12,"column_end":31},"name":"child_by_field_name","qualname":"<Node>::child_by_field_name","value":"pub fn child_by_field_name<impl AsRef<[u8]>: AsRef<[u8]>>(&Self,\n                                                          impl AsRef<[u8]>)\n-> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the first child with the given field name.","sig":null,"attributes":[{"value":"/ Get the first child with the given field name.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":31375,"byte_end":31425,"line_start":887,"line_end":887,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":31430,"byte_end":31433,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ If multiple children may have the same field name, access them using","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":31438,"byte_end":31510,"line_start":889,"line_end":889,"column_start":5,"column_end":77}},{"value":"/ [children_by_field_name](Node::children_by_field_name)","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":31515,"byte_end":31573,"line_start":890,"line_end":890,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":32164,"byte_end":32181,"line_start":906,"line_end":906,"column_start":12,"column_end":29},"name":"child_by_field_id","qualname":"<Node>::child_by_field_id","value":"pub fn child_by_field_id(&Self, u16) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get this node's child with the given numerical field id.","sig":null,"attributes":[{"value":"/ Get this node's child with the given numerical field id.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":31934,"byte_end":31994,"line_start":902,"line_end":902,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":31999,"byte_end":32002,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ See also [child_by_field_name](Node::child_by_field_name). You can convert a field name to","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":32007,"byte_end":32101,"line_start":904,"line_end":904,"column_start":5,"column_end":99}},{"value":"/ an id using [Language::field_id_for_name].","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":32106,"byte_end":32152,"line_start":905,"line_end":905,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":32387,"byte_end":32407,"line_start":911,"line_end":911,"column_start":12,"column_end":32},"name":"field_name_for_child","qualname":"<Node>::field_name_for_child","value":"pub fn field_name_for_child(&Self, u32) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Get the field name of this node's child at the given index.\n","sig":null,"attributes":[{"value":"/ Get the field name of this node's child at the given index.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":32312,"byte_end":32375,"line_start":910,"line_end":910,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":33164,"byte_end":33172,"line_start":931,"line_end":931,"column_start":12,"column_end":20},"name":"children","qualname":"<Node>::children","value":"pub fn children<'a>(&Self, &'a mut TreeCursor) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this node's children.","sig":null,"attributes":[{"value":"/ Iterate over this node's children.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":32722,"byte_end":32760,"line_start":922,"line_end":922,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":32765,"byte_end":32768,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ A [TreeCursor] is used to retrieve the children efficiently. Obtain","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":32773,"byte_end":32844,"line_start":924,"line_end":924,"column_start":5,"column_end":76}},{"value":"/ a [TreeCursor] by calling [Tree::walk] or [Node::walk]. To avoid unnecessary","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":32849,"byte_end":32929,"line_start":925,"line_end":925,"column_start":5,"column_end":85}},{"value":"/ allocations, you should reuse the same cursor for subsequent calls to","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":32934,"byte_end":33007,"line_start":926,"line_end":926,"column_start":5,"column_end":78}},{"value":"/ this method.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":33012,"byte_end":33028,"line_start":927,"line_end":927,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":33033,"byte_end":33036,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ If you're walking the tree recursively, you may want to use the `TreeCursor`","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":33041,"byte_end":33121,"line_start":929,"line_end":929,"column_start":5,"column_end":85}},{"value":"/ APIs directly instead.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":33126,"byte_end":33152,"line_start":930,"line_end":930,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":33638,"byte_end":33652,"line_start":947,"line_end":947,"column_start":12,"column_end":26},"name":"named_children","qualname":"<Node>::named_children","value":"pub fn named_children<'a>(&Self, &'a mut TreeCursor) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this node's named children.","sig":null,"attributes":[{"value":"/ Iterate over this node's named children.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":33539,"byte_end":33583,"line_start":944,"line_end":944,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":33588,"byte_end":33591,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ See also [Node::children].","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":33596,"byte_end":33626,"line_start":946,"line_end":946,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":34296,"byte_end":34318,"line_start":968,"line_end":968,"column_start":12,"column_end":34},"name":"children_by_field_name","qualname":"<Node>::children_by_field_name","value":"pub fn children_by_field_name<'a>(&Self, &str, &'a mut TreeCursor)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this node's children with a given field name.","sig":null,"attributes":[{"value":"/ Iterate over this node's children with a given field name.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":34179,"byte_end":34241,"line_start":965,"line_end":965,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":34246,"byte_end":34249,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ See also [Node::children].","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":34254,"byte_end":34284,"line_start":967,"line_end":967,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":34733,"byte_end":34753,"line_start":980,"line_end":980,"column_start":12,"column_end":32},"name":"children_by_field_id","qualname":"<Node>::children_by_field_id","value":"pub fn children_by_field_id<'a>(&Self, u16, &'a mut TreeCursor)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this node's children with a given field id.","sig":null,"attributes":[{"value":"/ Iterate over this node's children with a given field id.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":34604,"byte_end":34664,"line_start":977,"line_end":977,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":34669,"byte_end":34672,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ See also [Node::children_by_field_name].","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":34677,"byte_end":34721,"line_start":979,"line_end":979,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":35515,"byte_end":35521,"line_start":1006,"line_end":1006,"column_start":12,"column_end":18},"name":"parent","qualname":"<Node>::parent","value":"pub fn parent(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get this node's immediate parent.\n","sig":null,"attributes":[{"value":"/ Get this node's immediate parent.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":35466,"byte_end":35503,"line_start":1005,"line_end":1005,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":35661,"byte_end":35673,"line_start":1011,"line_end":1011,"column_start":12,"column_end":24},"name":"next_sibling","qualname":"<Node>::next_sibling","value":"pub fn next_sibling(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get this node's next sibling.\n","sig":null,"attributes":[{"value":"/ Get this node's next sibling.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":35616,"byte_end":35649,"line_start":1010,"line_end":1010,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":35823,"byte_end":35835,"line_start":1016,"line_end":1016,"column_start":12,"column_end":24},"name":"prev_sibling","qualname":"<Node>::prev_sibling","value":"pub fn prev_sibling(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get this node's previous sibling.\n","sig":null,"attributes":[{"value":"/ Get this node's previous sibling.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":35774,"byte_end":35811,"line_start":1015,"line_end":1015,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":35987,"byte_end":36005,"line_start":1021,"line_end":1021,"column_start":12,"column_end":30},"name":"next_named_sibling","qualname":"<Node>::next_named_sibling","value":"pub fn next_named_sibling(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get this node's next named sibling.\n","sig":null,"attributes":[{"value":"/ Get this node's next named sibling.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":35936,"byte_end":35975,"line_start":1020,"line_end":1020,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":36167,"byte_end":36185,"line_start":1026,"line_end":1026,"column_start":12,"column_end":30},"name":"prev_named_sibling","qualname":"<Node>::prev_named_sibling","value":"pub fn prev_named_sibling(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get this node's previous named sibling.\n","sig":null,"attributes":[{"value":"/ Get this node's previous named sibling.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":36112,"byte_end":36155,"line_start":1025,"line_end":1025,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":36374,"byte_end":36399,"line_start":1031,"line_end":1031,"column_start":12,"column_end":37},"name":"descendant_for_byte_range","qualname":"<Node>::descendant_for_byte_range","value":"pub fn descendant_for_byte_range(&Self, usize, usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the smallest node within this node that spans the given range.\n","sig":null,"attributes":[{"value":"/ Get the smallest node within this node that spans the given range.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":36292,"byte_end":36362,"line_start":1030,"line_end":1030,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":36673,"byte_end":36704,"line_start":1038,"line_end":1038,"column_start":12,"column_end":43},"name":"named_descendant_for_byte_range","qualname":"<Node>::named_descendant_for_byte_range","value":"pub fn named_descendant_for_byte_range(&Self, usize, usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the smallest named node within this node that spans the given range.\n","sig":null,"attributes":[{"value":"/ Get the smallest named node within this node that spans the given range.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":36585,"byte_end":36661,"line_start":1037,"line_end":1037,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":36978,"byte_end":37004,"line_start":1045,"line_end":1045,"column_start":12,"column_end":38},"name":"descendant_for_point_range","qualname":"<Node>::descendant_for_point_range","value":"pub fn descendant_for_point_range(&Self, Point, Point) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the smallest node within this node that spans the given range.\n","sig":null,"attributes":[{"value":"/ Get the smallest node within this node that spans the given range.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":36896,"byte_end":36966,"line_start":1044,"line_end":1044,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":37279,"byte_end":37311,"line_start":1052,"line_end":1052,"column_start":12,"column_end":44},"name":"named_descendant_for_point_range","qualname":"<Node>::named_descendant_for_point_range","value":"pub fn named_descendant_for_point_range(&Self, Point, Point) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the smallest named node within this node that spans the given range.\n","sig":null,"attributes":[{"value":"/ Get the smallest named node within this node that spans the given range.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":37191,"byte_end":37267,"line_start":1051,"line_end":1051,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":37511,"byte_end":37518,"line_start":1058,"line_end":1058,"column_start":12,"column_end":19},"name":"to_sexp","qualname":"<Node>::to_sexp","value":"pub fn to_sexp(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":37816,"byte_end":37825,"line_start":1068,"line_end":1068,"column_start":12,"column_end":21},"name":"utf8_text","qualname":"<Node>::utf8_text","value":"pub fn utf8_text<'a>(&Self, &'a [u8]) -> Result<&'a str, str::Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":37978,"byte_end":37988,"line_start":1072,"line_end":1072,"column_start":12,"column_end":22},"name":"utf16_text","qualname":"<Node>::utf16_text","value":"pub fn utf16_text<'a>(&Self, &'a [u16]) -> &'a [u16]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":38172,"byte_end":38176,"line_start":1077,"line_end":1077,"column_start":12,"column_end":16},"name":"walk","qualname":"<Node>::walk","value":"pub fn walk(&Self) -> TreeCursor","parent":null,"children":[],"decl_id":null,"docs":" Create a new [TreeCursor] starting from this node.\n","sig":null,"attributes":[{"value":"/ Create a new [TreeCursor] starting from this node.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":38106,"byte_end":38160,"line_start":1076,"line_end":1076,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":38747,"byte_end":38751,"line_start":1088,"line_end":1088,"column_start":12,"column_end":16},"name":"edit","qualname":"<Node>::edit","value":"pub fn edit(&mut Self, &InputEdit)","parent":null,"children":[],"decl_id":null,"docs":" Edit this node to keep it in-sync with source code that has been edited.","sig":null,"attributes":[{"value":"/ Edit this node to keep it in-sync with source code that has been edited.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":38294,"byte_end":38370,"line_start":1081,"line_end":1081,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":38375,"byte_end":38378,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ This function is only rarely needed. When you edit a syntax tree with the","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":38383,"byte_end":38460,"line_start":1083,"line_end":1083,"column_start":5,"column_end":82}},{"value":"/ [Tree::edit] method, all of the nodes that you retrieve from the tree","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":38465,"byte_end":38538,"line_start":1084,"line_end":1084,"column_start":5,"column_end":78}},{"value":"/ afterward will already reflect the edit. You only need to use [Node::edit]","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":38543,"byte_end":38621,"line_start":1085,"line_end":1085,"column_start":5,"column_end":83}},{"value":"/ when you have a specific [Node] instance that you want to keep and continue","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":38626,"byte_end":38705,"line_start":1086,"line_end":1086,"column_start":5,"column_end":84}},{"value":"/ to use after an edit.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":38710,"byte_end":38735,"line_start":1087,"line_end":1087,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":39695,"byte_end":39699,"line_start":1126,"line_end":1126,"column_start":12,"column_end":16},"name":"node","qualname":"<TreeCursor>::node","value":"pub fn node(&Self) -> Node","parent":null,"children":[],"decl_id":null,"docs":" Get the tree cursor's current [Node].\n","sig":null,"attributes":[{"value":"/ Get the tree cursor's current [Node].","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":39642,"byte_end":39683,"line_start":1125,"line_end":1125,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":39988,"byte_end":39996,"line_start":1136,"line_end":1136,"column_start":12,"column_end":20},"name":"field_id","qualname":"<TreeCursor>::field_id","value":"pub fn field_id(&Self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Get the numerical field id of this tree cursor's current node.","sig":null,"attributes":[{"value":"/ Get the numerical field id of this tree cursor's current node.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":39847,"byte_end":39913,"line_start":1133,"line_end":1133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":39918,"byte_end":39921,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ See also [field_name](TreeCursor::field_name).","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":39926,"byte_end":39976,"line_start":1135,"line_end":1135,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":40303,"byte_end":40313,"line_start":1148,"line_end":1148,"column_start":12,"column_end":22},"name":"field_name","qualname":"<TreeCursor>::field_name","value":"pub fn field_name(&Self) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Get the field name of this tree cursor's current node.\n","sig":null,"attributes":[{"value":"/ Get the field name of this tree cursor's current node.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":40233,"byte_end":40291,"line_start":1147,"line_end":1147,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":40800,"byte_end":40816,"line_start":1163,"line_end":1163,"column_start":12,"column_end":28},"name":"goto_first_child","qualname":"<TreeCursor>::goto_first_child","value":"pub fn goto_first_child(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Move this cursor to the first child of its current node.","sig":null,"attributes":[{"value":"/ Move this cursor to the first child of its current node.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":40603,"byte_end":40663,"line_start":1159,"line_end":1159,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":40668,"byte_end":40671,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ This returns `true` if the cursor successfully moved, and returns `false`","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":40676,"byte_end":40753,"line_start":1161,"line_end":1161,"column_start":5,"column_end":82}},{"value":"/ if there were no children.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":40758,"byte_end":40788,"line_start":1162,"line_end":1162,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":41162,"byte_end":41173,"line_start":1171,"line_end":1171,"column_start":12,"column_end":23},"name":"goto_parent","qualname":"<TreeCursor>::goto_parent","value":"pub fn goto_parent(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Move this cursor to the parent of its current node.","sig":null,"attributes":[{"value":"/ Move this cursor to the parent of its current node.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":40926,"byte_end":40981,"line_start":1167,"line_end":1167,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":40986,"byte_end":40989,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ This returns `true` if the cursor successfully moved, and returns `false`","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":40994,"byte_end":41071,"line_start":1169,"line_end":1169,"column_start":5,"column_end":82}},{"value":"/ if there was no parent node (the cursor was already on the root node).","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":41076,"byte_end":41150,"line_start":1170,"line_end":1170,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":41484,"byte_end":41501,"line_start":1179,"line_end":1179,"column_start":12,"column_end":29},"name":"goto_next_sibling","qualname":"<TreeCursor>::goto_next_sibling","value":"pub fn goto_next_sibling(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Move this cursor to the next sibling of its current node.","sig":null,"attributes":[{"value":"/ Move this cursor to the next sibling of its current node.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":41278,"byte_end":41339,"line_start":1175,"line_end":1175,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":41344,"byte_end":41347,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ This returns `true` if the cursor successfully moved, and returns `false`","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":41352,"byte_end":41429,"line_start":1177,"line_end":1177,"column_start":5,"column_end":82}},{"value":"/ if there was no next sibling node.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":41434,"byte_end":41472,"line_start":1178,"line_end":1178,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":41864,"byte_end":41889,"line_start":1188,"line_end":1188,"column_start":12,"column_end":37},"name":"goto_first_child_for_byte","qualname":"<TreeCursor>::goto_first_child_for_byte","value":"pub fn goto_first_child_for_byte(&mut Self, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Move this cursor to the first child of its current node that extends beyond\n the given byte offset.","sig":null,"attributes":[{"value":"/ Move this cursor to the first child of its current node that extends beyond","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":41612,"byte_end":41691,"line_start":1183,"line_end":1183,"column_start":5,"column_end":84}},{"value":"/ the given byte offset.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":41696,"byte_end":41722,"line_start":1184,"line_end":1184,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":41727,"byte_end":41730,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ This returns the index of the child node if one was found, and returns `None`","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":41735,"byte_end":41816,"line_start":1186,"line_end":1186,"column_start":5,"column_end":86}},{"value":"/ if no such child was found.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":41821,"byte_end":41852,"line_start":1187,"line_end":1187,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":42417,"byte_end":42443,"line_start":1203,"line_end":1203,"column_start":12,"column_end":38},"name":"goto_first_child_for_point","qualname":"<TreeCursor>::goto_first_child_for_point","value":"pub fn goto_first_child_for_point(&mut Self, Point) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Move this cursor to the first child of its current node that extends beyond\n the given byte offset.","sig":null,"attributes":[{"value":"/ Move this cursor to the first child of its current node that extends beyond","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":42165,"byte_end":42244,"line_start":1198,"line_end":1198,"column_start":5,"column_end":84}},{"value":"/ the given byte offset.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":42249,"byte_end":42275,"line_start":1199,"line_end":1199,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":42280,"byte_end":42283,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ This returns the index of the child node if one was found, and returns `None`","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":42288,"byte_end":42369,"line_start":1201,"line_end":1201,"column_start":5,"column_end":86}},{"value":"/ if no such child was found.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":42374,"byte_end":42405,"line_start":1202,"line_end":1202,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":42796,"byte_end":42801,"line_start":1214,"line_end":1214,"column_start":12,"column_end":17},"name":"reset","qualname":"<TreeCursor>::reset","value":"pub fn reset(&mut Self, Node)","parent":null,"children":[],"decl_id":null,"docs":" Re-initialize this tree cursor to start at a different node.\n","sig":null,"attributes":[{"value":"/ Re-initialize this tree cursor to start at a different node.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":42720,"byte_end":42784,"line_start":1213,"line_end":1213,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":43516,"byte_end":43519,"line_start":1238,"line_end":1238,"column_start":12,"column_end":15},"name":"new","qualname":"<Query>::new","value":"pub fn new(Language, &str) -> Result<Self, QueryError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new query from a string containing one or more S-expression\n patterns.","sig":null,"attributes":[{"value":"/ Create a new query from a string containing one or more S-expression","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":43205,"byte_end":43277,"line_start":1232,"line_end":1232,"column_start":5,"column_end":77}},{"value":"/ patterns.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":43282,"byte_end":43295,"line_start":1233,"line_end":1233,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":43300,"byte_end":43303,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ The query is associated with a particular language, and can only be run","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":43308,"byte_end":43383,"line_start":1235,"line_end":1235,"column_start":5,"column_end":80}},{"value":"/ on syntax nodes parsed with that language. References to Queries can be","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":43388,"byte_end":43463,"line_start":1236,"line_end":1236,"column_start":5,"column_end":80}},{"value":"/ shared between multiple threads.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":43468,"byte_end":43504,"line_start":1237,"line_end":1237,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":56575,"byte_end":56597,"line_start":1541,"line_end":1541,"column_start":12,"column_end":34},"name":"start_byte_for_pattern","qualname":"<Query>::start_byte_for_pattern","value":"pub fn start_byte_for_pattern(&Self, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the byte offset where the given pattern starts in the query's source.\n","sig":null,"attributes":[{"value":"/ Get the byte offset where the given pattern starts in the query's source.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":56486,"byte_end":56563,"line_start":1540,"line_end":1540,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":57075,"byte_end":57088,"line_start":1555,"line_end":1555,"column_start":12,"column_end":25},"name":"pattern_count","qualname":"<Query>::pattern_count","value":"pub fn pattern_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of patterns in the query.\n","sig":null,"attributes":[{"value":"/ Get the number of patterns in the query.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":57019,"byte_end":57063,"line_start":1554,"line_end":1554,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":57257,"byte_end":57270,"line_start":1560,"line_end":1560,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Query>::capture_names","value":"pub fn capture_names(&Self) -> &[String]","parent":null,"children":[],"decl_id":null,"docs":" Get the names of the captures used in the query.\n","sig":null,"attributes":[{"value":"/ Get the names of the captures used in the query.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":57193,"byte_end":57245,"line_start":1559,"line_end":1559,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":57402,"byte_end":57421,"line_start":1565,"line_end":1565,"column_start":12,"column_end":31},"name":"capture_quantifiers","qualname":"<Query>::capture_quantifiers","value":"pub fn capture_quantifiers(&Self, usize) -> &[CaptureQuantifier]","parent":null,"children":[],"decl_id":null,"docs":" Get the quantifiers of the captures used in the query.\n","sig":null,"attributes":[{"value":"/ Get the quantifiers of the captures used in the query.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":57332,"byte_end":57390,"line_start":1564,"line_end":1564,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":57576,"byte_end":57598,"line_start":1570,"line_end":1570,"column_start":12,"column_end":34},"name":"capture_index_for_name","qualname":"<Query>::capture_index_for_name","value":"pub fn capture_index_for_name(&Self, &str) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the index for a given capture name.\n","sig":null,"attributes":[{"value":"/ Get the index for a given capture name.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":57521,"byte_end":57564,"line_start":1569,"line_end":1569,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":57924,"byte_end":57943,"line_start":1580,"line_end":1580,"column_start":12,"column_end":31},"name":"property_predicates","qualname":"<Query>::property_predicates","value":"pub fn property_predicates(&Self, usize) -> &[(QueryProperty, bool)]","parent":null,"children":[],"decl_id":null,"docs":" Get the properties that are checked for the given pattern index.","sig":null,"attributes":[{"value":"/ Get the properties that are checked for the given pattern index.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":57763,"byte_end":57831,"line_start":1577,"line_end":1577,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":57836,"byte_end":57839,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ This includes predicates with the operators `is?` and `is-not?`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":57844,"byte_end":57912,"line_start":1579,"line_end":1579,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58190,"byte_end":58207,"line_start":1587,"line_end":1587,"column_start":12,"column_end":29},"name":"property_settings","qualname":"<Query>::property_settings","value":"pub fn property_settings(&Self, usize) -> &[QueryProperty]","parent":null,"children":[],"decl_id":null,"docs":" Get the properties that are set for the given pattern index.","sig":null,"attributes":[{"value":"/ Get the properties that are set for the given pattern index.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58047,"byte_end":58111,"line_start":1584,"line_end":1584,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58116,"byte_end":58119,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ This includes predicates with the operator `set!`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58124,"byte_end":58178,"line_start":1586,"line_end":1586,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58550,"byte_end":58568,"line_start":1598,"line_end":1598,"column_start":12,"column_end":30},"name":"general_predicates","qualname":"<Query>::general_predicates","value":"pub fn general_predicates(&Self, usize) -> &[QueryPredicate]","parent":null,"children":[],"decl_id":null,"docs":" Get the other user-defined predicates associated with the given index.","sig":null,"attributes":[{"value":"/ Get the other user-defined predicates associated with the given index.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58301,"byte_end":58375,"line_start":1591,"line_end":1591,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58380,"byte_end":58383,"line_start":1592,"line_end":1592,"column_start":5,"column_end":8}},{"value":"/ This includes predicate with operators other than:","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58388,"byte_end":58442,"line_start":1593,"line_end":1593,"column_start":5,"column_end":59}},{"value":"/ * `match?`","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58447,"byte_end":58461,"line_start":1594,"line_end":1594,"column_start":5,"column_end":19}},{"value":"/ * `eq?` and `not-eq?`","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58466,"byte_end":58491,"line_start":1595,"line_end":1595,"column_start":5,"column_end":30}},{"value":"/ * `is?` and `is-not?`","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58496,"byte_end":58521,"line_start":1596,"line_end":1596,"column_start":5,"column_end":30}},{"value":"/ * `set!`","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58526,"byte_end":58538,"line_start":1597,"line_end":1597,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58877,"byte_end":58892,"line_start":1606,"line_end":1606,"column_start":12,"column_end":27},"name":"disable_capture","qualname":"<Query>::disable_capture","value":"pub fn disable_capture(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Disable a certain capture within a query.","sig":null,"attributes":[{"value":"/ Disable a certain capture within a query.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58664,"byte_end":58709,"line_start":1602,"line_end":1602,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58714,"byte_end":58717,"line_start":1603,"line_end":1603,"column_start":5,"column_end":8}},{"value":"/ This prevents the capture from being returned in matches, and also avoids any","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58722,"byte_end":58803,"line_start":1604,"line_end":1604,"column_start":5,"column_end":86}},{"value":"/ resource usage associated with recording the capture.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":58808,"byte_end":58865,"line_start":1605,"line_end":1605,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":59329,"byte_end":59344,"line_start":1620,"line_end":1620,"column_start":12,"column_end":27},"name":"disable_pattern","qualname":"<Query>::disable_pattern","value":"pub fn disable_pattern(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Disable a certain pattern within a query.","sig":null,"attributes":[{"value":"/ Disable a certain pattern within a query.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":59143,"byte_end":59188,"line_start":1616,"line_end":1616,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":59193,"byte_end":59196,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ This prevents the pattern from matching, and also avoids any resource usage","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":59201,"byte_end":59280,"line_start":1618,"line_end":1618,"column_start":5,"column_end":84}},{"value":"/ associated with the pattern.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":59285,"byte_end":59317,"line_start":1619,"line_end":1619,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":59668,"byte_end":59697,"line_start":1628,"line_end":1628,"column_start":12,"column_end":41},"name":"is_pattern_guaranteed_at_step","qualname":"<Query>::is_pattern_guaranteed_at_step","value":"pub fn is_pattern_guaranteed_at_step(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a given step in a query is 'definite'.","sig":null,"attributes":[{"value":"/ Check if a given step in a query is 'definite'.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":59465,"byte_end":59516,"line_start":1624,"line_end":1624,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":59521,"byte_end":59524,"line_start":1625,"line_end":1625,"column_start":5,"column_end":8}},{"value":"/ A query step is 'definite' if its parent pattern will be guaranteed to match","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":59529,"byte_end":59609,"line_start":1626,"line_end":1626,"column_start":5,"column_end":85}},{"value":"/ successfully once it reaches the step.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":59614,"byte_end":59656,"line_start":1627,"line_end":1627,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":62223,"byte_end":62226,"line_start":1701,"line_end":1701,"column_start":12,"column_end":15},"name":"new","qualname":"<QueryCursor>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new cursor for executing a given query.","sig":null,"attributes":[{"value":"/ Create a new cursor for executing a given query.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":62065,"byte_end":62117,"line_start":1698,"line_end":1698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":62122,"byte_end":62125,"line_start":1699,"line_end":1699,"column_start":5,"column_end":8}},{"value":"/ The cursor stores the state that is needed to iteratively search for matches.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":62130,"byte_end":62211,"line_start":1700,"line_end":1700,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":62443,"byte_end":62454,"line_start":1708,"line_end":1708,"column_start":12,"column_end":23},"name":"match_limit","qualname":"<QueryCursor>::match_limit","value":"pub fn match_limit(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum number of in-progress matches for this cursor.\n","sig":null,"attributes":[{"value":"/ Return the maximum number of in-progress matches for this cursor.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":62362,"byte_end":62431,"line_start":1707,"line_end":1707,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":62676,"byte_end":62691,"line_start":1714,"line_end":1714,"column_start":12,"column_end":27},"name":"set_match_limit","qualname":"<QueryCursor>::set_match_limit","value":"pub fn set_match_limit(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of in-progress matches for this cursor.  The limit must be > 0 and\n <= 65536.\n","sig":null,"attributes":[{"value":"/ Set the maximum number of in-progress matches for this cursor.  The limit must be > 0 and","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":62553,"byte_end":62646,"line_start":1712,"line_end":1712,"column_start":5,"column_end":98}},{"value":"/ <= 65536.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":62651,"byte_end":62664,"line_start":1713,"line_end":1713,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":62951,"byte_end":62973,"line_start":1722,"line_end":1722,"column_start":12,"column_end":34},"name":"did_exceed_match_limit","qualname":"<QueryCursor>::did_exceed_match_limit","value":"pub fn did_exceed_match_limit(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if, on its last execution, this cursor exceeded its maximum number of\n in-progress matches.\n","sig":null,"attributes":[{"value":"/ Check if, on its last execution, this cursor exceeded its maximum number of","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":62831,"byte_end":62910,"line_start":1720,"line_end":1720,"column_start":5,"column_end":84}},{"value":"/ in-progress matches.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":62915,"byte_end":62939,"line_start":1721,"line_end":1721,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":63436,"byte_end":63443,"line_start":1731,"line_end":1731,"column_start":12,"column_end":19},"name":"matches","qualname":"<QueryCursor>::matches","value":"pub fn matches<'a, 'tree:'a, T: TextProvider +\n               'a>(&'a mut Self, &'a Query, Node, T) -> QueryMatches","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all of the matches in the order that they were found.","sig":null,"attributes":[{"value":"/ Iterate over all of the matches in the order that they were found.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":63084,"byte_end":63154,"line_start":1726,"line_end":1726,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":63159,"byte_end":63162,"line_start":1727,"line_end":1727,"column_start":5,"column_end":8}},{"value":"/ Each match contains the index of the pattern that matched, and a list of captures.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":63167,"byte_end":63253,"line_start":1728,"line_end":1728,"column_start":5,"column_end":91}},{"value":"/ Because multiple patterns can match the same set of nodes, one match may contain","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":63258,"byte_end":63342,"line_start":1729,"line_end":1729,"column_start":5,"column_end":89}},{"value":"/ captures that appear *before* some of the captures from a previous match.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":63347,"byte_end":63424,"line_start":1730,"line_end":1730,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":64192,"byte_end":64200,"line_start":1753,"line_end":1753,"column_start":12,"column_end":20},"name":"captures","qualname":"<QueryCursor>::captures","value":"pub fn captures<'a, 'tree:'a, T: TextProvider +\n                'a>(&'a mut Self, &'a Query, Node, T) -> QueryCaptures","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all of the individual captures in the order that they appear.","sig":null,"attributes":[{"value":"/ Iterate over all of the individual captures in the order that they appear.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":63962,"byte_end":64040,"line_start":1749,"line_end":1749,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":64045,"byte_end":64048,"line_start":1750,"line_end":1750,"column_start":5,"column_end":8}},{"value":"/ This is useful if you don't care about which pattern matched, and just want a single,","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":64053,"byte_end":64142,"line_start":1751,"line_end":1751,"column_start":5,"column_end":94}},{"value":"/ ordered sequence of captures.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":64147,"byte_end":64180,"line_start":1752,"line_end":1752,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":64827,"byte_end":64841,"line_start":1772,"line_end":1772,"column_start":12,"column_end":26},"name":"set_byte_range","qualname":"<QueryCursor>::set_byte_range","value":"pub fn set_byte_range(&mut Self, ops::Range<usize>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the range in which the query will be executed, in terms of byte offsets.\n","sig":null,"attributes":[{"value":"/ Set the range in which the query will be executed, in terms of byte offsets.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":64735,"byte_end":64815,"line_start":1771,"line_end":1771,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":65210,"byte_end":65225,"line_start":1784,"line_end":1784,"column_start":12,"column_end":27},"name":"set_point_range","qualname":"<QueryCursor>::set_point_range","value":"pub fn set_point_range(&mut Self, ops::Range<Point>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the range in which the query will be executed, in terms of rows and columns.\n","sig":null,"attributes":[{"value":"/ Set the range in which the query will be executed, in terms of rows and columns.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":65114,"byte_end":65198,"line_start":1783,"line_end":1783,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":65548,"byte_end":65550,"line_start":1797,"line_end":1797,"column_start":12,"column_end":14},"name":"id","qualname":"<QueryMatch>::id","value":"pub fn id(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":65601,"byte_end":65607,"line_start":1801,"line_end":1801,"column_start":12,"column_end":18},"name":"remove","qualname":"<QueryMatch>::remove","value":"pub fn remove(Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":65709,"byte_end":65732,"line_start":1805,"line_end":1805,"column_start":12,"column_end":35},"name":"nodes_for_capture_index","qualname":"<QueryMatch>::nodes_for_capture_index","value":"pub fn nodes_for_capture_index(&Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":69158,"byte_end":69161,"line_start":1901,"line_end":1901,"column_start":12,"column_end":15},"name":"new","qualname":"<QueryProperty>::new","value":"pub fn new(&str, Option<&str>, Option<usize>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":71473,"byte_end":71487,"line_start":1968,"line_end":1968,"column_start":12,"column_end":26},"name":"set_byte_range","qualname":"<QueryMatches>::set_byte_range","value":"pub fn set_byte_range(&mut Self, ops::Range<usize>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":71669,"byte_end":71684,"line_start":1974,"line_end":1974,"column_start":12,"column_end":27},"name":"set_point_range","qualname":"<QueryMatches>::set_point_range","value":"pub fn set_point_range(&mut Self, ops::Range<Point>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":71936,"byte_end":71950,"line_start":1982,"line_end":1982,"column_start":12,"column_end":26},"name":"set_byte_range","qualname":"<QueryCaptures>::set_byte_range","value":"pub fn set_byte_range(&mut Self, ops::Range<usize>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":72132,"byte_end":72147,"line_start":1988,"line_end":1988,"column_start":12,"column_end":27},"name":"set_point_range","qualname":"<QueryCaptures>::set_point_range","value":"pub fn set_point_range(&mut Self, ops::Range<Point>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73382,"byte_end":73385,"line_start":2044,"line_end":2044,"column_start":12,"column_end":15},"name":"new","qualname":"<Point>::new","value":"pub fn new(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":75109,"byte_end":75112,"line_start":2109,"line_end":2109,"column_start":12,"column_end":15},"name":"new","qualname":"<LossyUtf8>::new","value":"pub fn new(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":433},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78111,"byte_end":78124,"line_start":2212,"line_end":2212,"column_start":15,"column_end":28},"name":"set_allocator","qualname":"::set_allocator","value":"pub unsafe fn set_allocator(Option<unsafe extern \"C\" fn(: usize)\n                                       -> *mut c_void>,\n                            Option<unsafe extern \"C\" fn(: usize, : usize)\n                                       -> *mut c_void>,\n                            Option<unsafe extern \"C\" fn(: *mut c_void,\n                                                        : usize)\n                                       -> *mut c_void>,\n                            Option<unsafe extern \"C\" fn(: *mut c_void)>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/util.rs","byte_start":79363,"byte_end":79374,"line_start":11,"line_end":11,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/util.rs","byte_start":79509,"byte_end":79520,"line_start":17,"line_end":17,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/util.rs","byte_start":79959,"byte_end":79970,"line_start":36,"line_end":36,"column_start":37,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/util.rs","byte_start":79995,"byte_end":80006,"line_start":38,"line_end":38,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":3518,"byte_end":3535,"line_start":118,"line_end":118,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6970,"byte_end":6978,"line_start":243,"line_end":243,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":9622,"byte_end":9628,"line_start":322,"line_end":322,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":179},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":23954,"byte_end":23960,"line_start":666,"line_end":666,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":24132,"byte_end":24136,"line_start":674,"line_end":674,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":25960,"byte_end":25964,"line_start":720,"line_end":720,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26113,"byte_end":26117,"line_start":726,"line_end":726,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26225,"byte_end":26229,"line_start":732,"line_end":732,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26367,"byte_end":26371,"line_start":738,"line_end":738,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":244},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":38924,"byte_end":38928,"line_start":1094,"line_end":1094,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":39033,"byte_end":39037,"line_start":1100,"line_end":1100,"column_start":17,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":39070,"byte_end":39074,"line_start":1102,"line_end":1102,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":39354,"byte_end":39358,"line_start":1112,"line_end":1112,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":39621,"byte_end":39631,"line_start":1124,"line_end":1124,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":42926,"byte_end":42936,"line_start":1219,"line_end":1219,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":43078,"byte_end":43088,"line_start":1225,"line_end":1225,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":43193,"byte_end":43198,"line_start":1231,"line_end":1231,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":62047,"byte_end":62058,"line_start":1697,"line_end":1697,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":332},{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":65513,"byte_end":65523,"line_start":1796,"line_end":1796,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":69131,"byte_end":69144,"line_start":1900,"line_end":1900,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":69465,"byte_end":69477,"line_start":1910,"line_end":1910,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":70323,"byte_end":70336,"line_start":1935,"line_end":1935,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":71433,"byte_end":71445,"line_start":1967,"line_end":1967,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":71895,"byte_end":71908,"line_start":1981,"line_end":1981,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":72357,"byte_end":72367,"line_start":1995,"line_end":1995,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":72660,"byte_end":72661,"line_start":2005,"line_end":2005,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73027,"byte_end":73032,"line_start":2025,"line_end":2025,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73129,"byte_end":73134,"line_start":2031,"line_end":2031,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73244,"byte_end":73255,"line_start":2037,"line_end":2037,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73363,"byte_end":73368,"line_start":2043,"line_end":2043,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73484,"byte_end":73489,"line_start":2049,"line_end":2049,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73652,"byte_end":73657,"line_start":2055,"line_end":2055,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73840,"byte_end":73845,"line_start":2064,"line_end":2064,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":74033,"byte_end":74038,"line_start":2073,"line_end":2073,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":74335,"byte_end":74340,"line_start":2084,"line_end":2084,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":75082,"byte_end":75091,"line_start":2108,"line_end":2108,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":75255,"byte_end":75264,"line_start":2117,"line_end":2117,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":76652,"byte_end":76671,"line_start":2164,"line_end":2164,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":76822,"byte_end":76835,"line_start":2170,"line_end":2170,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":77127,"byte_end":77137,"line_start":2180,"line_end":2180,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78551,"byte_end":78570,"line_start":2222,"line_end":2222,"column_start":23,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78596,"byte_end":78609,"line_start":2223,"line_end":2223,"column_start":23,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78635,"byte_end":78645,"line_start":2224,"line_end":2224,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78671,"byte_end":78679,"line_start":2226,"line_end":2226,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78704,"byte_end":78710,"line_start":2227,"line_end":2227,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78735,"byte_end":78740,"line_start":2228,"line_end":2228,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78765,"byte_end":78776,"line_start":2229,"line_end":2229,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78801,"byte_end":78805,"line_start":2230,"line_end":2230,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78830,"byte_end":78838,"line_start":2231,"line_end":2231,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78863,"byte_end":78869,"line_start":2232,"line_end":2232,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78894,"byte_end":78899,"line_start":2233,"line_end":2233,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78924,"byte_end":78935,"line_start":2234,"line_end":2234,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78960,"byte_end":78964,"line_start":2235,"line_end":2235,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/util.rs","byte_start":79363,"byte_end":79374,"line_start":11,"line_end":11,"column_start":9,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":13},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/util.rs","byte_start":79509,"byte_end":79520,"line_start":17,"line_end":17,"column_start":28,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":13},"to":{"krate":2,"index":7607}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/util.rs","byte_start":79959,"byte_end":79970,"line_start":36,"line_end":36,"column_start":37,"column_end":48},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":13},"to":{"krate":2,"index":7496}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/util.rs","byte_start":79995,"byte_end":80006,"line_start":38,"line_end":38,"column_start":18,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":13},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":3518,"byte_end":3535,"line_start":118,"line_end":118,"column_start":34,"column_end":51},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":936},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":6970,"byte_end":6978,"line_start":243,"line_end":243,"column_start":6,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":9622,"byte_end":9628,"line_start":322,"line_end":322,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":23954,"byte_end":23960,"line_start":666,"line_end":666,"column_start":15,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":24132,"byte_end":24136,"line_start":674,"line_end":674,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":25960,"byte_end":25964,"line_start":720,"line_end":720,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26113,"byte_end":26117,"line_start":726,"line_end":726,"column_start":15,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26225,"byte_end":26229,"line_start":732,"line_end":732,"column_start":16,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":26367,"byte_end":26371,"line_start":738,"line_end":738,"column_start":13,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":38924,"byte_end":38928,"line_start":1094,"line_end":1094,"column_start":24,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":903},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":39033,"byte_end":39037,"line_start":1100,"line_end":1100,"column_start":17,"column_end":21},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":903},"to":{"krate":2,"index":2660}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":39070,"byte_end":39074,"line_start":1102,"line_end":1102,"column_start":25,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":903},"to":{"krate":2,"index":9558}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":39354,"byte_end":39358,"line_start":1112,"line_end":1112,"column_start":25,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":903},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":39621,"byte_end":39631,"line_start":1124,"line_end":1124,"column_start":10,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":99},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":42926,"byte_end":42936,"line_start":1219,"line_end":1219,"column_start":20,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":99},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":43078,"byte_end":43088,"line_start":1225,"line_end":1225,"column_start":19,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":99},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":43193,"byte_end":43198,"line_start":1231,"line_end":1231,"column_start":6,"column_end":11},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":62047,"byte_end":62058,"line_start":1697,"line_end":1697,"column_start":6,"column_end":17},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":65513,"byte_end":65523,"line_start":1796,"line_end":1796,"column_start":17,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":69131,"byte_end":69144,"line_start":1900,"line_end":1900,"column_start":6,"column_end":19},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":69465,"byte_end":69477,"line_start":1910,"line_end":1910,"column_start":51,"column_end":63},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":115},"to":{"krate":2,"index":7607}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":70323,"byte_end":70336,"line_start":1935,"line_end":1935,"column_start":51,"column_end":64},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":125},"to":{"krate":2,"index":7607}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":71433,"byte_end":71445,"line_start":1967,"line_end":1967,"column_start":38,"column_end":50},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":71895,"byte_end":71908,"line_start":1981,"line_end":1981,"column_start":38,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":72357,"byte_end":72367,"line_start":1995,"line_end":1995,"column_start":37,"column_end":47},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":108},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":72660,"byte_end":72661,"line_start":2005,"line_end":2005,"column_start":37,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":387},"to":{"krate":0,"index":135}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73027,"byte_end":73032,"line_start":2025,"line_end":2025,"column_start":20,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":926},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73129,"byte_end":73134,"line_start":2031,"line_end":2031,"column_start":15,"column_end":20},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":926},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73244,"byte_end":73255,"line_start":2037,"line_end":2037,"column_start":15,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73363,"byte_end":73368,"line_start":2043,"line_end":2043,"column_start":6,"column_end":11},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73484,"byte_end":73489,"line_start":2049,"line_end":2049,"column_start":23,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73652,"byte_end":73657,"line_start":2055,"line_end":2055,"column_start":29,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":2907}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":73840,"byte_end":73845,"line_start":2064,"line_end":2064,"column_start":29,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":74033,"byte_end":74038,"line_start":2073,"line_end":2073,"column_start":29,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":2907}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":74335,"byte_end":74340,"line_start":2084,"line_end":2084,"column_start":29,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":860},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":75082,"byte_end":75091,"line_start":2108,"line_end":2108,"column_start":10,"column_end":19},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":75255,"byte_end":75264,"line_start":2117,"line_end":2117,"column_start":23,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":7607}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":76652,"byte_end":76671,"line_start":2164,"line_end":2164,"column_start":23,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1022},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":76822,"byte_end":76835,"line_start":2170,"line_end":2170,"column_start":23,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1011},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":77127,"byte_end":77137,"line_start":2180,"line_end":2180,"column_start":23,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":9359}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78551,"byte_end":78570,"line_start":2222,"line_end":2222,"column_start":23,"column_end":42},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1022},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78596,"byte_end":78609,"line_start":2223,"line_end":2223,"column_start":23,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1011},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78635,"byte_end":78645,"line_start":2224,"line_end":2224,"column_start":23,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1034},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78671,"byte_end":78679,"line_start":2226,"line_end":2226,"column_start":22,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":821},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78704,"byte_end":78710,"line_start":2227,"line_end":2227,"column_start":22,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78735,"byte_end":78740,"line_start":2228,"line_end":2228,"column_start":22,"column_end":27},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":926},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78765,"byte_end":78776,"line_start":2229,"line_end":2229,"column_start":22,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78801,"byte_end":78805,"line_start":2230,"line_end":2230,"column_start":22,"column_end":26},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78830,"byte_end":78838,"line_start":2231,"line_end":2231,"column_start":22,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":821},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78863,"byte_end":78869,"line_start":2232,"line_end":2232,"column_start":22,"column_end":28},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78894,"byte_end":78899,"line_start":2233,"line_end":2233,"column_start":22,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":926},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78924,"byte_end":78935,"line_start":2234,"line_end":2234,"column_start":22,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/tree-sitter-0.20.6/binding_rust/lib.rs","byte_start":78960,"byte_end":78964,"line_start":2235,"line_end":2235,"column_start":22,"column_end":26},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":3016}}]}