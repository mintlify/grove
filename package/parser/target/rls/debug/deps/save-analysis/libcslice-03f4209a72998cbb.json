{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0","program":"/Users/hanwang/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","cslice","/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=03f4209a72998cbb","-C","extra-filename=-03f4209a72998cbb","--out-dir","/Users/hanwang/Desktop/mintlify/grove/package/parser/target/rls/debug/deps","-L","dependency=/Users/hanwang/Desktop/mintlify/grove/package/parser/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/hanwang/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/hanwang/Desktop/mintlify/grove/package/parser/target/rls/debug/deps/libcslice-03f4209a72998cbb.rmeta"},"prelude":{"crate_id":{"name":"cslice","disambiguator":[1146129061074337965,0]},"crate_root":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src","external_crates":[{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5327680806253035642,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3474867148648759986,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5062925168166713036,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2981460363035574205,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17736094580601255721,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10052842426541007562,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9489815130599098901,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3346726902215706372,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3873550637736747779,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4549466995013025454,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5157751798851432137,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17289477099079096810,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[9019874491848494796,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[5361552711123437457,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1973549709176203698,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[16289716248128265453,0]}},{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1392457260957006495,0]}}],"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":0,"byte_end":5573,"line_start":1,"line_end":217,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":0,"byte_end":5573,"line_start":1,"line_end":217,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":92},{"krate":0,"index":98},{"krate":0,"index":102},{"krate":0,"index":20},{"krate":0,"index":26},{"krate":0,"index":105},{"krate":0,"index":111},{"krate":0,"index":115},{"krate":0,"index":30},{"krate":0,"index":39},{"krate":0,"index":43},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":64},{"krate":0,"index":69},{"krate":0,"index":73},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":88}],"decl_id":null,"docs":" A library of _C-slices_: slices with a stable ABI for interfacing with C.","sig":null,"attributes":[{"value":"/ A library of _C-slices_: slices with a stable ABI for interfacing with C.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":78,"byte_end":81,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library provides two types, `CSlice` and `CMutSlice`, for communicating","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":82,"byte_end":162,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ with C about Rust slices or foreign slice-like data structures. Both types","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":163,"byte_end":241,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ have a stable ABI consisting of exactly two pointer-sized words:","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":242,"byte_end":310,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":311,"byte_end":314,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```c","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":315,"byte_end":323,"line_start":7,"line_end":7,"column_start":1,"column_end":9}},{"value":"/ struct {","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":324,"byte_end":336,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/     void *base;","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":337,"byte_end":356,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/     size_t len;","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":357,"byte_end":376,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":377,"byte_end":382,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":383,"byte_end":390,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":391,"byte_end":394,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ C-slices and Rust slices are interchangeable, with conversion methods in both","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":395,"byte_end":476,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ directions.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":477,"byte_end":492,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":493,"byte_end":496,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This makes it possible to construct slices from foreign code, as well as to","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":497,"byte_end":576,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ communicate Rust slices to foreign code conveniently.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":577,"byte_end":634,"line_start":18,"line_end":18,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":995,"byte_end":1001,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"CSlice","qualname":"::CSlice","value":"CSlice {  }","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"decl_id":null,"docs":" An immutable slice, equivalent to `&'a T`.","sig":null,"attributes":[{"value":"/ An immutable slice, equivalent to `&'a T`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":723,"byte_end":769,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":770,"byte_end":773,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A `CSlice` can be constructed from a corresponding Rust slice via the `AsCSlice` trait.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":774,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":866,"byte_end":869,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ A Rust slice can be constructed from a corresponding `CSlice` via `as_ref`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":870,"byte_end":949,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"repr(C)","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":950,"byte_end":960,"line_start":29,"line_end":29,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1352,"byte_end":1355,"line_start":44,"line_end":44,"column_start":19,"column_end":22},"name":"new","qualname":"<CSlice>::new","value":"pub unsafe fn new(*const T, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `CSlice` from raw data.","sig":null,"attributes":[{"value":"/ Create a `CSlice` from raw data.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1114,"byte_end":1150,"line_start":38,"line_end":38,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1155,"byte_end":1158,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1163,"byte_end":1175,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1180,"byte_end":1183,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The region of memory from `base` (inclusive) to `base + len * sizeof<T>`","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1188,"byte_end":1264,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/ (exclusive) must be valid for the duration of lifetime `'a`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1269,"byte_end":1333,"line_start":43,"line_end":43,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1609,"byte_end":1615,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<CSlice>::as_ptr","value":"pub fn as_ptr(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Produces a raw pointer to the slice's buffer.\n","sig":null,"attributes":[{"value":"/ Produces a raw pointer to the slice's buffer.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1548,"byte_end":1597,"line_start":53,"line_end":53,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1726,"byte_end":1729,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"len","qualname":"<CSlice>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the slice.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the slice.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1666,"byte_end":1714,"line_start":58,"line_end":58,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":105},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2221,"byte_end":2230,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"CMutSlice","qualname":"::CMutSlice","value":"CMutSlice {  }","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"decl_id":null,"docs":" A mutable slice, equivalent to `&'a mut T`.","sig":null,"attributes":[{"value":"/ A mutable slice, equivalent to `&'a mut T`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1939,"byte_end":1986,"line_start":72,"line_end":72,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1987,"byte_end":1990,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ A `CMutSlice` can be constructed from a corresponding Rust slice via the `AsCMutSlice` trait.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1991,"byte_end":2088,"line_start":74,"line_end":74,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2089,"byte_end":2092,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ A Rust slice can be constructed from a corresponding `CMutSlice` via `as_mut`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2093,"byte_end":2175,"line_start":76,"line_end":76,"column_start":1,"column_end":83}},{"value":"repr(C)","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2176,"byte_end":2186,"line_start":77,"line_end":77,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2582,"byte_end":2585,"line_start":92,"line_end":92,"column_start":19,"column_end":22},"name":"new","qualname":"<CMutSlice>::new","value":"pub unsafe fn new(*mut T, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `CSlice` from raw data.","sig":null,"attributes":[{"value":"/ Create a `CSlice` from raw data.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2344,"byte_end":2380,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2385,"byte_end":2388,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2393,"byte_end":2405,"line_start":88,"line_end":88,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2410,"byte_end":2413,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The region of memory from `base` (inclusive) to `base + len * sizeof<T>`","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2418,"byte_end":2494,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/ (exclusive) must be valid for the duration of lifetime `'a`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2499,"byte_end":2563,"line_start":91,"line_end":91,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2844,"byte_end":2850,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<CMutSlice>::as_ptr","value":"pub fn as_ptr(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Produces a raw pointer to the slice's buffer.\n","sig":null,"attributes":[{"value":"/ Produces a raw pointer to the slice's buffer.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2783,"byte_end":2832,"line_start":101,"line_end":101,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2962,"byte_end":2972,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<CMutSlice>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Produces a raw pointer to the slice's buffer.\n","sig":null,"attributes":[{"value":"/ Produces a raw pointer to the slice's buffer.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2901,"byte_end":2950,"line_start":106,"line_end":106,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":3121,"byte_end":3129,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<CMutSlice>::as_slice","value":"pub fn as_slice(&Self) -> &'a [T]","parent":null,"children":[],"decl_id":null,"docs":" A cheap conversion to a Rust slice. This is slightly more general than `as_ref`.\n","sig":null,"attributes":[{"value":"/ A cheap conversion to a Rust slice. This is slightly more general than `as_ref`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":3025,"byte_end":3109,"line_start":111,"line_end":111,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":3347,"byte_end":3359,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<CMutSlice>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &'a mut [T]","parent":null,"children":[],"decl_id":null,"docs":" A cheap conversion to a mutable Rust slice. This is slightly more general than `as_mut`.\n","sig":null,"attributes":[{"value":"/ A cheap conversion to a mutable Rust slice. This is slightly more general than `as_mut`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":3243,"byte_end":3335,"line_start":118,"line_end":118,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":3545,"byte_end":3548,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"len","qualname":"<CMutSlice>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the slice.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the slice.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":3485,"byte_end":3533,"line_start":125,"line_end":125,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":73},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4645,"byte_end":4653,"line_start":178,"line_end":178,"column_start":11,"column_end":19},"name":"AsCSlice","qualname":"::AsCSlice","value":"AsCSlice<'a, T>","parent":null,"children":[{"krate":0,"index":76}],"decl_id":null,"docs":" A cheap conversion to a `CSlice`.\n","sig":null,"attributes":[{"value":"/ A cheap conversion to a `CSlice`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4597,"byte_end":4634,"line_start":177,"line_end":177,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4703,"byte_end":4713,"line_start":180,"line_end":180,"column_start":8,"column_end":18},"name":"as_c_slice","qualname":"::AsCSlice::as_c_slice","value":"pub fn as_c_slice(&'a Self) -> CSlice","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Performs the conversion.\n","sig":null,"attributes":[{"value":"/ Performs the conversion.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4667,"byte_end":4695,"line_start":179,"line_end":179,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":77},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4796,"byte_end":4807,"line_start":184,"line_end":184,"column_start":11,"column_end":22},"name":"AsCMutSlice","qualname":"::AsCMutSlice","value":"AsCMutSlice<'a, T>","parent":null,"children":[{"krate":0,"index":80}],"decl_id":null,"docs":" A cheap conversion to a `CMutSlice`.\n","sig":null,"attributes":[{"value":"/ A cheap conversion to a `CMutSlice`.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4745,"byte_end":4785,"line_start":183,"line_end":183,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4857,"byte_end":4871,"line_start":186,"line_end":186,"column_start":8,"column_end":22},"name":"as_c_mut_slice","qualname":"::AsCMutSlice::as_c_mut_slice","value":"pub fn as_c_mut_slice(&'a mut Self) -> CMutSlice","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Performs the conversion.\n","sig":null,"attributes":[{"value":"/ Performs the conversion.","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4821,"byte_end":4849,"line_start":185,"line_end":185,"column_start":5,"column_end":33}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1094,"byte_end":1100,"line_start":37,"line_end":37,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1801,"byte_end":1807,"line_start":64,"line_end":64,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2321,"byte_end":2330,"line_start":85,"line_end":85,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":3620,"byte_end":3629,"line_start":131,"line_end":131,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":3788,"byte_end":3797,"line_start":139,"line_end":139,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":3975,"byte_end":3981,"line_start":147,"line_end":147,"column_start":35,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4028,"byte_end":4034,"line_start":149,"line_end":149,"column_start":35,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4081,"byte_end":4090,"line_start":151,"line_end":151,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4137,"byte_end":4146,"line_start":153,"line_end":153,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4188,"byte_end":4194,"line_start":155,"line_end":155,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4333,"byte_end":4342,"line_start":163,"line_end":163,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4484,"byte_end":4493,"line_start":171,"line_end":171,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1094,"byte_end":1100,"line_start":37,"line_end":37,"column_start":13,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":1801,"byte_end":1807,"line_start":64,"line_end":64,"column_start":28,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":2321,"byte_end":2330,"line_start":85,"line_end":85,"column_start":13,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":3620,"byte_end":3629,"line_start":131,"line_end":131,"column_start":28,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":105},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":3788,"byte_end":3797,"line_start":139,"line_end":139,"column_start":28,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":105},"to":{"krate":2,"index":2904}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":3975,"byte_end":3981,"line_start":147,"line_end":147,"column_start":35,"column_end":41},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4028,"byte_end":4034,"line_start":149,"line_end":149,"column_start":35,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4081,"byte_end":4090,"line_start":151,"line_end":151,"column_start":35,"column_end":44},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":105},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4137,"byte_end":4146,"line_start":153,"line_end":153,"column_start":35,"column_end":44},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":105},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4188,"byte_end":4194,"line_start":155,"line_end":155,"column_start":30,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4333,"byte_end":4342,"line_start":163,"line_end":163,"column_start":30,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":105},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/hanwang/.cargo/registry/src/github.com-1ecc6299db9ec823/cslice-0.2.0/src/lib.rs","byte_start":4484,"byte_end":4493,"line_start":171,"line_end":171,"column_start":33,"column_end":42},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":105},"to":{"krate":2,"index":3304}}]}